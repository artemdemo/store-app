{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/change_detection/change_detection_jit_generator.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,0NAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgCpD,SAAS,aAAW,CAAE,IAAG,CAAG,CAAA,IAAG,CAAG,CAAA,aAAY,CAAG,CAAA,UAAS,CAAG;AAC3D,SAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,KAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,cAAY,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,WAAS,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC3I,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,IAC3B,EAAC,KAAG,EAAC,KACL,EAAC,cAAY,EAAC,KACd,EAAC,WAAS,EAAC,gEAGE,EAAC,KAAG,EAAC,yCAEnB,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,oBAAkB,CAAE,IAAG,CAAG,CAAA,iBAAgB,CAAG;AACpD,SAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,kBAAgB,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACrF,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,QACvB,EAAC,KAAG,EAAC,eAAc,EAAC,KAAG,EAAC,uCAC5B,EAAC,yBAAuB,EAAC,iBACzB,EAAC,oBAAkB,EAAC,mBACpB,EAAC,oBAAkB,EAAC,mBACpB,EAAC,gBAAc,EAAC,eAChB,EAAC,kBAAgB,EAAC,UAGlB,EAAC,KAAG,EAAC,8BAA6B,EAAC,yBAAuB,EAAC,iBAC5D,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,mBAAiB,CAAE,IAAG,CAAG;AAChC,SAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC9C,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,IAC3B,EAAC,KAAG,EAAC,8EAGN,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,sBAAoB,CAAE,IAAG,CAAG,CAAA,IAAG,CAAG;AACzC,SAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,KAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACxE,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,IAC3B,EAAC,KAAG,EAAC,oEACH,EAAC,KAAG,EAAC,QAER,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,aAAW,CAAE,gBAAe,CAAG,CAAA,iBAAgB,CAAG,CAAA,OAAM,CAAG;AAClE,SAAK,cAAc,AAAC,CAAC,gBAAe,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,kBAAgB,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC9H,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,IAC3B,EAAC,iBAAe,EAAC,KACjB,EAAC,kBAAgB,EAAC,SACd,EAAC,WAAS,EAAC,UACX,EAAC,aAAW,EAAC,UACb,EAAC,cAAY,EAAC,wCAGlB,EAAC,QAAM,EAAC,KACT,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,eAAa,CAAE,KAAI,CAAG;AAC7B,SAAK,cAAc,AAAC,CAAC,KAAI,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC/C,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,QACvB,EAAC,cAAY,EAAC,OAAM,EAAC,cAAY,EAAC,uCAClB,EAAC,KAAG,EAAC,kBAAiB,EAAC,gBAAc,EAAC,IAAG,EAAC,MAAI,EAAC,MAAK,EAAC,cAAY,EAAC,YACpF,EAAC,oBAAkB,EAAC,mBAAkB,EAAC,gBAAc,EAAC,IAAG,EAAC,MAAI,EAAC,uBAAsB,EAAC,cAAY,EAAC,SACnG,EAAC,cAAY,EAAC,gBAEjB,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,wBAAsB,CAAE,SAAQ,CAAG,CAAA,KAAI,CAAG,CAAA,OAAM,CAAG,CAAA,MAAK,CAAG;AAClE,SAAK,cAAc,AAAC,CAAC,SAAQ,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,MAAI,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACvI,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,IAC3B,EAAC,aAAW,EAAC,MAAK,EAAC,KAAG,EAAC,oBAAmB,EAAC,MAAI,EAAC,KAAI,EAAC,QAAM,EAAC,WACxD,EAAC,aAAW,EAAC,UACf,EAAC,cAAY,EAAC,MAAK,EAAC,KAAG,EAAC,cAAa,EAAC,cAAY,EAAC,UACjD,EAAC,KAAG,EAAC,iBAAgB,EAAC,gBAAc,EAAC,IAAG,EAAC,UAAQ,EAAC,qBAAoB,EAAC,aAAW,EAAC,UACrF,EAAC,MAAI,EAAC,MAAK,EAAC,aAAW,EAAC,sBAE1B,EAAC,OAAK,EAAC,KACR,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,uBAAqB,CAAE,UAAS,CAAG,CAAA,QAAO,CAAG,CAAA,QAAO,CAAG,CAAA,MAAK,CAAG,CAAA,SAAQ,CAAG,CAAA,MAAK,CAAG;AACzF,WAAO,IACR,EAAC,WAAS,EAAC,SACP,EAAC,SAAO,EAAC,QAAO,EAAC,SAAO,EAAC,QAAO,EAAC,SAAO,EAAC,QAAO,EAAC,SAAO,EAAC,SAAQ,EAAC,SAAO,EAAC,QAAO,EAAC,SAAO,EAAC,WAC5F,EAAC,OAAK,EAAC,eACP,EAAC,UAAQ,EAAC,OACV,EAAC,SAAO,EAAC,MAAK,EAAC,SAAO,EAAC,SAEzB,EAAC,OAAK,EAAC,KACR,EAAC;EACD;AAAA,AACA,SAAS,mBAAiB,CAAE,KAAI,CAAG,CAAA,KAAI,CAAG;AACxC,SAAK,cAAc,AAAC,CAAC,KAAI,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,MAAI,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC1E,WAAU,KAAI,EAAC,MAAK,EAAC,MAAI,EAAC,IAAE,EAAC;EAC/B;AAAA,AAIA,SAAS,qBAAmB,CAAE,IAAG,CAAG,CAAA,OAAM,CAAG,CAAA,QAAO,CAAG;AACrD,SAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,SAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACzG,WAAO,IACR,EAAC,WAAS,EAAC,MAAK,EAAC,KAAG,EAAC,kBAAgB,EAAC,KAAG,EAAC,OAAK,EAAC,QAAM,EAAC,WACnD,EAAC,WAAS,EAAC,iDACb,EAAC,SAAO,EAAC,MAAK,EAAC,WAAS,EAAC,SAAQ,EAAC,KAAG,EAAC,oBAEtC,EAAC,SAAO,EAAC,MAAK,EAAC,WAAS,EAAC,IAAG,EAAC,KAAG,EAAC,SAEpC,EAAC;EACD;AAAA,AAIA,SAAS,yBAAuB,CAAE,KAAI;AACpC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,IAAI,AAAC,EAAC,SAAC,CAAA;aAAM,MAAM,EAAC,EAAA,EAAC,IAAE;IAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EAC1F;AAIA,SAAS,0BAAwB,CAAE,KAAI;AACrC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,IAAI,AAAC,EAAC,SAAC,CAAA;aAAM,MAAM,EAAC,EAAA,EAAC,YAAU;IAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EAClG;AAIA,SAAS,yBAAuB,CAAE,KAAI;AACpC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,IAAI,AAAC,EAAC,SAAC,CAAA;aAAS,CAAA,EAAC,MAAK,EAAC,KAAG,EAAC,kBAAgB;IAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EAC9G;AAIA,SAAS,uBAAqB,CAAE,WAAU,CAAG,CAAA,IAAG,CAAG;AACjD,SAAK,cAAc,AAAC,CAAC,WAAU,CAAG,KAAG,CAAG,KAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AACjE,AAAI,MAAA,CAAA,IAAG,EAAI,CAAA,WAAU,KAAK,AAAC,CAAC,MAAK,CAAC,CAAC;AACnC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAC,QACvB,EAAC,KAAG,EAAC,UACP,EAAC,KAAG,EAAC,QAER,EAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;EACvB;AAAA,AAIA,SAAS,8BAA4B,CAAE,UAAS,CAAG,CAAA,QAAO,CAAG,CAAA,QAAO,CAAG;AACrE,SAAK,cAAc,AAAC,CAAC,UAAS,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,SAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,SAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAChH,WAAU,aAAY,EAAC,MAAK,EAAC,KAAG,EAAC,cAAa,EAAC,cAAY,EAAC,UACzD,EAAC,KAAG,EAAC,uBAAsB,EAAC,gBAAc,EAAC,IAAG,EAAC,WAAS,EAAC,qBAAoB,EAAC,SAAO,EAAC,KAAI,EAAC,SAAO,EAAC,MAAI,EAAC;EAC7G;ACpMA,ADoMA,OCpMO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,WAAoB,KAAG,KAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kCAAoB,KAAG,4BAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,6BAAoB,KAAG,uBAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,0BAAoB,KAAG,oBAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,2BAAoB,KAAG,qBAAkB,CAAC;AAA1C,gCAAoB,KAAG,0BAAkB,CAAC;AAA1C,wBAAoB,KAAG,kBAAkB,CAAC;AAA1C,iCAAoB,KAAG,2BAAkB,CAAC;AAA1C,+BAAoB,KAAG,yBAAkB,CAAC;AAA1C,+BAAoB,KAAG,yBAAkB,CAAC;AAA1C,mCAAoB,KAAG,6BAAkB,CAAC;AAA1C,mCAAoB,KAAG,6BAAkB,CAAC;AAA1C,8BAAoB,KAAG,wBAAkB,CAAC;AAA1C,0BAAoB,KAAG,oBAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;+BDsBmB,yBAAuB;WAC3C,sBAAoB;0BACL,kBAAgB;0BAChB,kBAAgB;sBACpB,cAAY;mBACf,SAAO;oBACN,UAAQ;iBACX,OAAK;AAatB,WAAK,eAAe,AAAC,CAAC,YAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC/D,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;AAeL,WAAK,eAAe,AAAC,CAAC,mBAAkB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACtE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;AASL,WAAK,eAAe,AAAC,CAAC,kBAAiB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACrE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AASL,WAAK,eAAe,AAAC,CAAC,qBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACxE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;AAcL,WAAK,eAAe,AAAC,CAAC,YAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC/D,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;AAWL,WAAK,eAAe,AAAC,CAAC,cAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACjE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AAaL,WAAK,eAAe,AAAC,CAAC,uBAAsB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC1E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;AAgBL,WAAK,eAAe,AAAC,CAAC,kBAAiB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACrE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;AAYL,WAAK,eAAe,AAAC,CAAC,oBAAmB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACvE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;AAIL,WAAK,eAAe,AAAC,CAAC,wBAAuB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC3E,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;AAIL,WAAK,eAAe,AAAC,CAAC,yBAAwB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC5E,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;AAIL,WAAK,eAAe,AAAC,CAAC,wBAAuB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC3E,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;AAUL,WAAK,eAAe,AAAC,CAAC,sBAAqB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACzE,eAAO,EAAC,CAAC,IAAG,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;AAML,WAAK,eAAe,AAAC,CAAC,6BAA4B,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAChF,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;iCIvMmB,CAAA,SAAQ,AAAC,gCCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,6BLuMP,SAAM,2BAAyB,CACxB,QAAO,CAAG,CAAA,OAAM,CAAG;AAC7B,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,QAAM,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAC;AAClG,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,aAAG,WAAW,EAAI,CAAA,IAAG,cAAc,AAAC,CAAC,OAAM,CAAC,CAAC;AAC7C,aAAG,YAAY,EAAI,CAAA,IAAG,eAAe,AAAC,CAAC,IAAG,WAAW,CAAC,CAAC;AACvD,aAAG,WAAW,EAAI,CAAA,IAAG,cAAc,AAAC,CAAC,IAAG,WAAW,CAAC,CAAC;QK9MP,AL+MhD,CK/MiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AL+M5C,sBAAY,CAAZ,UAAc,OAAM;AAClB,iBAAK,cAAc,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAC;AACpE,AAAI,cAAA,CAAA,KAAI,EAAI,EAAA,CAAC;AACb,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,OAAM,IAAI,AAAC,EAAC,SAAC,CAAA,CAAM;AAC7B,AAAI,gBAAA,CAAA,aAAY,EAAI,CAAA,CAAA,KAAK,QAAQ,AAAC,CAAC,GAAI,OAAK,AAAC,CAAC,KAAI,CAAG,IAAE,CAAC,CAAG,GAAC,CAAC,CAAC;AAC9D,qBAAO,EAAE,EAAC,cAAY,EAAI,CAAA,KAAI,EAAE,EAAG;YACrC,EAAC,CAAC;AACF,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,CAAC,SAAQ,CAAC,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC,CAAC;UACzF;AACA,uBAAa,CAAb,UAAe,UAAS;AACtB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,UAAS,IAAI,AAAC,EAAC,SAAC,CAAA;qBAAM,SAAS,EAAC,EAAA;YAAE,EAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC,CAAC;UACpG;AACA,sBAAY,CAAZ,UAAc,UAAS;AACrB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,UAAS,IAAI,AAAC,EAAC,SAAC,CAAA;qBAAM,OAAO,EAAC,EAAA;YAAE,EAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC,CAAC;UAClG;AACA,iBAAO,CAAP,UAAQ,AAAC,CAAE;AACT,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,YAAW,AAAC,CAAC,IAAG,SAAS,CAAG,CAAA,IAAG,eAAe,AAAC,EAAC,CAAG,CAAA,IAAG,iBAAiB,AAAC,EAAC,CAAG,CAAA,IAAG,cAAc,AAAC,EAAC,CAAC,CAAC;AAC5G,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,CAAC,wBAAuB,CAAG,sBAAoB,CAAG,8BAA4B,CAAG,SAAO,CAAG,KAAG,CAAC,AAAC,CAAC,sBAAqB,CAAG,oBAAkB,CAAG,4BAA0B,CAAG,CAAA,IAAG,QAAQ,CAAC,CAAC,CAAG,SAAO,CAAC,CAAC;UAC5O;AACA,uBAAa,CAAb,UAAc,AAAC,CAAE;AACf,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,mBAAkB,AAAC,CAAC,IAAG,SAAS,CAAG,CAAA,wBAAuB,AAAC,CAAC,IAAG,WAAW,CAAC,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC/H;AACA,sBAAY,CAAZ,UAAa,AAAC,CAAE;AACd,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,IAAG,SAAS,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UACnF;AACA,yBAAe,CAAf,UAAgB,AAAC,CAAE;AACjB,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,QAAQ,AAAC,EAAC,CAAC;AACzB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,qBAAoB,AAAC,CAAC,IAAG,SAAS,CAAG,KAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC5F;AACA,gBAAM,CAAN,UAAO,AAAC;;AACN,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,IAAG,QAAQ,IAAI,AAAC,EAAC,SAAC,CAAA;mBAAM,CAAA,cAAa,AAAC,CAAC,CAAA,CAAC;YAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;AAC/D,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,YAAW,AAAC,CAAC,IAAG,oBAAoB,AAAC,EAAC,CAAG,CAAA,IAAG,qBAAqB,AAAC,EAAC,CAAG,IAAE,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC5H;AACA,4BAAkB,CAAlB,UAAmB,AAAC,CAAE;AACpB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,wBAAuB,AAAC,CAAC,IAAG,WAAW,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC3F;AACA,6BAAmB,CAAnB,UAAoB,AAAC,CAAE;AACrB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,yBAAwB,AAAC,CAAC,IAAG,YAAY,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC7F;AACA,kBAAQ,CAAR,UAAU,CAAA,CAAG;AACX,iBAAK,cAAc,AAAC,CAAC,CAAA,CAAG,YAAU,CAAC,CAAC;AACpC,eAAI,CAAA,KAAK,GAAK,6BAA2B,CAAG;AAC1C,mBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,mBAAmB,AAAC,CAAC,CAAA,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;YAC5E,KAAO;AACL,mBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,kBAAkB,AAAC,CAAC,CAAA,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;YAC3E;AAAA,UACF;AACA,2BAAiB,CAAjB,UAAmB,CAAA,CAAG;AACpB,iBAAK,cAAc,AAAC,CAAC,CAAA,CAAG,YAAU,CAAC,CAAC;AACpC,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,UAAU,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,OAAM,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,aAAa,CAAC,CAAC;AAC7C,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,uBAAsB,AAAC,CAAC,CAAA,UAAU,EAAI,EAAA,CAAG,MAAI,CAAG,QAAM,CAAG,CAAA,IAAG,UAAU,AAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC7H;AACA,0BAAgB,CAAhB,UAAkB,CAAA,CAAG;AACnB,iBAAK,cAAc,AAAC,CAAC,CAAA,CAAG,YAAU,CAAC,CAAC;AACpC,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,UAAU,CAAC,CAAC;AAC3C,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,UAAU,CAAC,CAAC;AAC3C,AAAI,cAAA,CAAA,MAAK,EAAI,CAAA,IAAG,YAAY,CAAE,CAAA,UAAU,CAAC,CAAC;AAC1C,AAAI,cAAA,CAAA,UAAS,EAAI,CAAA,IAAG,sBAAsB,AAAC,CAAC,CAAA,CAAC,CAAC;AAC9C,AAAI,cAAA,CAAA,SAAQ,EAAI,CAAA,6BAA4B,AAAC,CAAC,CAAA,UAAU,EAAI,EAAA,CAAG,SAAO,CAAG,SAAO,CAAC,CAAC;AAClF,AAAI,cAAA,CAAA,MAAK,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,CAAA,CAAC,CAAC;AAC9B,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,sBAAqB,AAAC,CAAC,UAAS,CAAG,SAAO,CAAG,SAAO,CAAG,OAAK,CAAG,CAAA,CAAA,cAAc,EAAI,UAAQ,EAAI,GAAC,CAAG,OAAK,CAAC,CAAC;AACpH,YAAA;AACA,eAAI,CAAA,eAAe,AAAC,EAAC,CAAG;AACtB,mBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,eAAe,AAAC,CAAC,CAAA,CAAG,MAAI,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;YAC/E,KAAO;AACL,mBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;YACvD;AAAA,UACF;AACA,8BAAoB,CAApB,UAAsB,CAAA,CAAG;AACvB,iBAAK,cAAc,AAAC,CAAC,CAAA,CAAG,YAAU,CAAC,CAAC;AACpC,AAAI,cAAA,CAAA,OAAM,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,aAAa,CAAC,CAAC;AAC7C,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,UAAU,CAAC,CAAC;AAC3C,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;AAC1B,mBAAQ,CAAA,KAAK;AACX,iBAAK,iBAAe;AAClB,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,CAAG,QAAM,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AACvF,iBAAK,kBAAgB;AACnB,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,EAAI,QAAO,EAAC,MAAK,EAAC,CAAA,IAAG,WAAW,AAAC,CAAC,CAAA,YAAY,CAAC,EAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AACnG,iBAAK,qBAAmB;AACtB,mBAAI,CAAA,aAAa,GAAK,EAAA,CAAG;AACvB,uBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,oBAAmB,AAAC,CAAC,CAAA,KAAK,CAAG,QAAM,CAAG,SAAO,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;gBACjG,KAAO;AACL,uBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,OAAM,EAAC,IAAG,EAAC,CAAA,CAAA,KAAK,EAAG,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;gBACtG;AAAA,AACF,iBAAK,0BAAwB;AAC3B,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,OAAM,EAAC,IAAG,EAAC,CAAA,CAAA,KAAK,EAAC,IAAG,EAAC,KAAG,EAAC,IAAE,EAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AAC/G,iBAAK,2BAAyB;AAC5B,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,OAAM,EAAC,IAAG,EAAC,KAAG,EAAC,IAAE,EAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AACrG,iBAAK,yBAAuB;AAC1B,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,IAAG,EAAC,IAAG,EAAC,CAAA,CAAA,KAAK,EAAC,IAAG,EAAC,KAAG,EAAC,IAAE,EAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AAC5G,iBAAK,wBAAsB;AACzB,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,CAAG,CAAA,IAAG,iBAAiB,AAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AACxG,iBAAK,6BAA2B;AAC9B,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,mBAAkB,EAAC,UAAQ,EAAC,CAAA,CAAA,KAAK,EAAC,OAAK,EAAC,KAAG,EAAC,IAAE,EAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AAClI,iBAAK,yBAAuB;AAC1B,AAAI,kBAAA,CAAA,GAAE,EAAI,CAAA,IAAG,WAAW,CAAE,CAAA,KAAK,CAAE,CAAA,CAAC,CAAC,CAAC;AACpC,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,kBAAiB,AAAC,CAAC,QAAO,GAAM,OAAM,EAAC,IAAG,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAAA,AACpG;AACE,oBAAM,IAAI,cAAY,AAAC,EAAC,oBAAoB,EAAC,CAAA,CAAA,KAAK,EAAG,CAAC;AADjD,YAET;UACF;AACA,uBAAa,CAAb,UAAe,CAAA,CAAG,CAAA,IAAG;;AACnB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,sBAAqB,AAAC,CAAC,CAAA,KAAK,IAAI,AAAC,EAAC,SAAC,CAAA;mBAAM,CAAA,gBAAe,CAAE,CAAA,CAAC;YAAA,EAAC,CAAG,KAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UACtH;AACA,yBAAe,CAAf,UAAiB,CAAA,CAAG;AAClB,iBAAK,cAAc,AAAC,CAAC,CAAA,CAAG,YAAU,CAAC,CAAC;AACpC,AAAI,cAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,CAAA,KAAK,OAAO,CAAG,GAAE,CAAA,CAAG;AACtC,gBAAE,GAAK,CAAA,IAAG,WAAW,AAAC,CAAC,CAAA,UAAU,CAAE,CAAA,CAAC,CAAC,CAAC;AACtC,gBAAE,GAAK,MAAI,CAAC;AACZ,gBAAE,GAAK,CAAA,IAAG,WAAW,CAAE,CAAA,KAAK,CAAE,CAAA,CAAC,CAAC,CAAC;AACjC,gBAAE,GAAK,MAAI,CAAC;YACd;AAAA,AACA,cAAE,GAAK,CAAA,IAAG,WAAW,AAAC,CAAC,CAAA,UAAU,CAAE,CAAA,KAAK,OAAO,CAAC,CAAC,CAAC;AAClD,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,GAAE,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UACrD;AACA,mBAAS,CAAT,UAAW,KAAI,CAAG;AAChB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UACvE;AACA,kBAAQ,CAAR,UAAU,CAAA,CAAG;AACX,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,CAAA,gBAAgB,EAAI,CAAA,cAAa,AAAC,CAAC,CAAA,UAAU,EAAI,EAAA,CAAC,CAAA,CAAI,GAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC1G;AACA,gBAAM,CAAN,UAAQ,CAAA;;AACN,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,CAAA,KAAK,IAAI,AAAC,EAAC,SAAC,GAAE;mBAAM,CAAA,eAAc,CAAE,GAAE,CAAC;YAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UACtG;aK3U8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AJgVtE,WAAK,eAAe,AAAC,CAAC,0BAAyB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,cAAc,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACrG,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,eAAe,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACtG,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,cAAc,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACrG,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,UAAU,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACjG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,mBAAmB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC1G,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,kBAAkB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACzG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,sBAAsB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7G,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,eAAe,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACtG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,iBAAiB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACxG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,0BAAyB,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC/F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IC9W0B;EAC3B,CAAA;AFDI,CAAC,CAAC;ACkX8C","file":"angular2/src/change_detection/change_detection_jit_generator.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  isBlank,\n  BaseException,\n  Type} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {ContextWithVariableBindings} from './parser/context_with_variable_bindings';\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {ChangeDetectionUtil} from './change_detection_util';\nimport {ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_INVOKE_FORMATTER,\n  RECORD_TYPE_STRUCTURAL_CHECK,\n  RECORD_TYPE_INTERPOLATE,\n  ProtoChangeDetector} from './proto_change_detector';\nvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\nvar UTIL = \"ChangeDetectionUtil\";\nvar DISPATCHER_ACCESSOR = \"this.dispatcher\";\nvar FORMATTERS_ACCESSOR = \"this.formatters\";\nvar PROTOS_ACCESSOR = \"this.protos\";\nvar CHANGE_LOCAL = \"change\";\nvar CHANGES_LOCAL = \"changes\";\nvar TEMP_LOCAL = \"temp\";\nfunction typeTemplate(type, cons, detectChanges, setContext) {\n  assert.argumentTypes(type, assert.type.string, cons, assert.type.string, detectChanges, assert.type.string, setContext, assert.type.string);\n  return assert.returnType((`\r\n${cons}\r\n${detectChanges}\r\n${setContext};\r\n\r\nreturn function(dispatcher, formatters) {\r\n  return new ${type}(dispatcher, formatters, protos);\r\n}\r\n`), assert.type.string);\n}\nObject.defineProperty(typeTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction constructorTemplate(type, fieldsDefinitions) {\n  assert.argumentTypes(type, assert.type.string, fieldsDefinitions, assert.type.string);\n  return assert.returnType((`\r\nvar ${type} = function ${type}(dispatcher, formatters, protos) {\r\n${ABSTRACT_CHANGE_DETECTOR}.call(this);\r\n${DISPATCHER_ACCESSOR} = dispatcher;\r\n${FORMATTERS_ACCESSOR} = formatters;\r\n${PROTOS_ACCESSOR} = protos;\r\n${fieldsDefinitions}\r\n}\r\n\r\n${type}.prototype = Object.create(${ABSTRACT_CHANGE_DETECTOR}.prototype);\r\n`), assert.type.string);\n}\nObject.defineProperty(constructorTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction setContextTemplate(type) {\n  assert.argumentTypes(type, assert.type.string);\n  return assert.returnType((`\r\n${type}.prototype.setContext = function(context) {\r\n  this.context = context;\r\n}\r\n`), assert.type.string);\n}\nObject.defineProperty(setContextTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction detectChangesTemplate(type, body) {\n  assert.argumentTypes(type, assert.type.string, body, assert.type.string);\n  return assert.returnType((`\r\n${type}.prototype.detectChangesInRecords = function(throwOnChange) {\r\n  ${body}\r\n}\r\n`), assert.type.string);\n}\nObject.defineProperty(detectChangesTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction bodyTemplate(localDefinitions, changeDefinitions, records) {\n  assert.argumentTypes(localDefinitions, assert.type.string, changeDefinitions, assert.type.string, records, assert.type.string);\n  return assert.returnType((`\r\n${localDefinitions}\r\n${changeDefinitions}\r\nvar ${TEMP_LOCAL};\r\nvar ${CHANGE_LOCAL};\r\nvar ${CHANGES_LOCAL} = null;\r\n\r\ncontext = this.context;\r\n${records}\r\n`), assert.type.string);\n}\nObject.defineProperty(bodyTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction notifyTemplate(index) {\n  assert.argumentTypes(index, assert.type.number);\n  return assert.returnType((`\r\nif (${CHANGES_LOCAL} && ${CHANGES_LOCAL}.length > 0) {\r\n  if(throwOnChange) ${UTIL}.throwOnChange(${PROTOS_ACCESSOR}[${index}], ${CHANGES_LOCAL}[0]);\r\n  ${DISPATCHER_ACCESSOR}.onRecordChange(${PROTOS_ACCESSOR}[${index}].directiveMemento, ${CHANGES_LOCAL});\r\n  ${CHANGES_LOCAL} = null;\r\n}\r\n`), assert.type.string);\n}\nObject.defineProperty(notifyTemplate, \"parameters\", {get: function() {\n    return [[assert.type.number]];\n  }});\nfunction structuralCheckTemplate(selfIndex, field, context, notify) {\n  assert.argumentTypes(selfIndex, assert.type.number, field, assert.type.string, context, assert.type.string, notify, assert.type.string);\n  return assert.returnType((`\r\n${CHANGE_LOCAL} = ${UTIL}.structuralCheck(${field}, ${context});\r\nif (${CHANGE_LOCAL}) {\r\n  ${CHANGES_LOCAL} = ${UTIL}.addRecord(${CHANGES_LOCAL},\r\n    ${UTIL}.changeRecord(${PROTOS_ACCESSOR}[${selfIndex}].bindingMemento, ${CHANGE_LOCAL}));\r\n  ${field} = ${CHANGE_LOCAL}.currentValue;\r\n}\r\n${notify}\r\n`), assert.type.string);\n}\nObject.defineProperty(structuralCheckTemplate, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction referenceCheckTemplate(assignment, newValue, oldValue, change, addRecord, notify) {\n  return `\r\n${assignment}\r\nif (${newValue} !== ${oldValue} || (${newValue} !== ${newValue}) && (${oldValue} !== ${oldValue})) {\r\n  ${change} = true;\r\n  ${addRecord}\r\n  ${oldValue} = ${newValue};\r\n}\r\n${notify}\r\n`;\n}\nfunction assignmentTemplate(field, value) {\n  assert.argumentTypes(field, assert.type.string, value, assert.type.string);\n  return `${field} = ${value};`;\n}\nObject.defineProperty(assignmentTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction propertyReadTemplate(name, context, newValue) {\n  assert.argumentTypes(name, assert.type.string, context, assert.type.string, newValue, assert.type.string);\n  return `\r\n${TEMP_LOCAL} = ${UTIL}.findContext(\"${name}\", ${context});\r\nif (${TEMP_LOCAL} instanceof ContextWithVariableBindings) {\r\n  ${newValue} = ${TEMP_LOCAL}.get('${name}');\r\n} else {\r\n  ${newValue} = ${TEMP_LOCAL}.${name};\r\n}\r\n`;\n}\nObject.defineProperty(propertyReadTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction localDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `var ${n};`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(localDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction changeDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `var ${n} = false;`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(changeDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction fieldDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `${n} = ${UTIL}.unitialized();`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(fieldDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction ifChangedGuardTemplate(changeNames, body) {\n  assert.argumentTypes(changeNames, List, body, assert.type.string);\n  var cond = changeNames.join(\" || \");\n  return assert.returnType((`\r\nif (${cond}) {\r\n  ${body}\r\n}\r\n`), assert.type.string);\n}\nObject.defineProperty(ifChangedGuardTemplate, \"parameters\", {get: function() {\n    return [[List], [assert.type.string]];\n  }});\nfunction addSimpleChangeRecordTemplate(protoIndex, oldValue, newValue) {\n  assert.argumentTypes(protoIndex, assert.type.number, oldValue, assert.type.string, newValue, assert.type.string);\n  return `${CHANGES_LOCAL} = ${UTIL}.addRecord(${CHANGES_LOCAL},\r\n    ${UTIL}.simpleChangeRecord(${PROTOS_ACCESSOR}[${protoIndex}].bindingMemento, ${oldValue}, ${newValue}));`;\n}\nObject.defineProperty(addSimpleChangeRecordTemplate, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.string], [assert.type.string]];\n  }});\nexport class ChangeDetectorJITGenerator {\n  constructor(typeName, records) {\n    assert.argumentTypes(typeName, assert.type.string, records, assert.genericType(List, ProtoRecord));\n    this.typeName = typeName;\n    this.records = records;\n    this.localNames = this.getLocalNames(records);\n    this.changeNames = this.getChangeNames(this.localNames);\n    this.fieldNames = this.getFieldNames(this.localNames);\n  }\n  getLocalNames(records) {\n    assert.argumentTypes(records, assert.genericType(List, ProtoRecord));\n    var index = 0;\n    var names = records.map((r) => {\n      var sanitizedName = r.name.replace(new RegExp(\"\\\\W\", \"g\"), '');\n      return `${sanitizedName}${index++}`;\n    });\n    return assert.returnType(([\"context\"].concat(names)), assert.genericType(List, String));\n  }\n  getChangeNames(localNames) {\n    return assert.returnType((localNames.map((n) => `change_${n}`)), assert.genericType(List, String));\n  }\n  getFieldNames(localNames) {\n    return assert.returnType((localNames.map((n) => `this.${n}`)), assert.genericType(List, String));\n  }\n  generate() {\n    var text = typeTemplate(this.typeName, this.genConstructor(), this.genDetectChanges(), this.genSetContext());\n    return assert.returnType((new Function('AbstractChangeDetector', 'ChangeDetectionUtil', 'ContextWithVariableBindings', 'protos', text)(AbstractChangeDetector, ChangeDetectionUtil, ContextWithVariableBindings, this.records)), Function);\n  }\n  genConstructor() {\n    return assert.returnType((constructorTemplate(this.typeName, fieldDefinitionsTemplate(this.fieldNames))), assert.type.string);\n  }\n  genSetContext() {\n    return assert.returnType((setContextTemplate(this.typeName)), assert.type.string);\n  }\n  genDetectChanges() {\n    var body = this.genBody();\n    return assert.returnType((detectChangesTemplate(this.typeName, body)), assert.type.string);\n  }\n  genBody() {\n    var rec = this.records.map((r) => this.genRecord(r)).join(\"\\n\");\n    return assert.returnType((bodyTemplate(this.genLocalDefinitions(), this.genChangeDefinitions(), rec)), assert.type.string);\n  }\n  genLocalDefinitions() {\n    return assert.returnType((localDefinitionsTemplate(this.localNames)), assert.type.string);\n  }\n  genChangeDefinitions() {\n    return assert.returnType((changeDefinitionsTemplate(this.changeNames)), assert.type.string);\n  }\n  genRecord(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    if (r.mode == RECORD_TYPE_STRUCTURAL_CHECK) {\n      return assert.returnType((this.getStructuralCheck(r)), assert.type.string);\n    } else {\n      return assert.returnType((this.genReferenceCheck(r)), assert.type.string);\n    }\n  }\n  getStructuralCheck(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var field = this.fieldNames[r.selfIndex];\n    var context = this.localNames[r.contextIndex];\n    return assert.returnType((structuralCheckTemplate(r.selfIndex - 1, field, context, this.genNotify(r))), assert.type.string);\n  }\n  genReferenceCheck(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var assignment = this.genUpdateCurrentValue(r);\n    var addRecord = addSimpleChangeRecordTemplate(r.selfIndex - 1, oldValue, newValue);\n    var notify = this.genNotify(r);\n    var check = referenceCheckTemplate(assignment, newValue, oldValue, change, r.lastInBinding ? addRecord : '', notify);\n    ;\n    if (r.isPureFunction()) {\n      return assert.returnType((this.ifChangedGuard(r, check)), assert.type.string);\n    } else {\n      return assert.returnType((check), assert.type.string);\n    }\n  }\n  genUpdateCurrentValue(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var context = this.localNames[r.contextIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var args = this.genArgs(r);\n    switch (r.mode) {\n      case RECORD_TYPE_SELF:\n        return assert.returnType((assignmentTemplate(newValue, context)), assert.type.string);\n      case RECORD_TYPE_CONST:\n        return assert.returnType((`${newValue} = ${this.genLiteral(r.funcOrValue)}`), assert.type.string);\n      case RECORD_TYPE_PROPERTY:\n        if (r.contextIndex == 0) {\n          return assert.returnType((propertyReadTemplate(r.name, context, newValue)), assert.type.string);\n        } else {\n          return assert.returnType((assignmentTemplate(newValue, `${context}.${r.name}`)), assert.type.string);\n        }\n      case RECORD_TYPE_INVOKE_METHOD:\n        return assert.returnType((assignmentTemplate(newValue, `${context}.${r.name}(${args})`)), assert.type.string);\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return assert.returnType((assignmentTemplate(newValue, `${context}(${args})`)), assert.type.string);\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return assert.returnType((assignmentTemplate(newValue, `${UTIL}.${r.name}(${args})`)), assert.type.string);\n      case RECORD_TYPE_INTERPOLATE:\n        return assert.returnType((assignmentTemplate(newValue, this.genInterpolation(r))), assert.type.string);\n      case RECORD_TYPE_INVOKE_FORMATTER:\n        return assert.returnType((assignmentTemplate(newValue, `${FORMATTERS_ACCESSOR}.get(\"${r.name}\")(${args})`)), assert.type.string);\n      case RECORD_TYPE_KEYED_ACCESS:\n        var key = this.localNames[r.args[0]];\n        return assert.returnType((assignmentTemplate(newValue, `${context}[${key}]`)), assert.type.string);\n      default:\n        throw new BaseException(`Unknown operation ${r.mode}`);\n    }\n  }\n  ifChangedGuard(r, body) {\n    return assert.returnType((ifChangedGuardTemplate(r.args.map((a) => this.changeNames[a]), body)), assert.type.string);\n  }\n  genInterpolation(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var res = \"\";\n    for (var i = 0; i < r.args.length; ++i) {\n      res += this.genLiteral(r.fixedArgs[i]);\n      res += \" + \";\n      res += this.localNames[r.args[i]];\n      res += \" + \";\n    }\n    res += this.genLiteral(r.fixedArgs[r.args.length]);\n    return assert.returnType((res), assert.type.string);\n  }\n  genLiteral(value) {\n    return assert.returnType((JSON.stringify(value)), assert.type.string);\n  }\n  genNotify(r) {\n    return assert.returnType((r.lastInDirective ? notifyTemplate(r.selfIndex - 1) : ''), assert.type.string);\n  }\n  genArgs(r) {\n    return assert.returnType((r.args.map((arg) => this.localNames[arg]).join(\", \")), assert.type.string);\n  }\n}\nObject.defineProperty(ChangeDetectorJITGenerator, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.genericType(List, ProtoRecord)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getLocalNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ProtoRecord)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getChangeNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, String)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getFieldNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, String)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genRecord, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getStructuralCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genReferenceCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genUpdateCurrentValue, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.ifChangedGuard, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.string]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genInterpolation, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genArgs, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/change_detection/change_detection_jit_generator.map\n\n//# sourceMappingURL=./change_detection_jit_generator.map","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}