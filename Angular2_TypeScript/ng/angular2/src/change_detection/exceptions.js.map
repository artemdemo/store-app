{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","angular2/src/change_detection/exceptions.js","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wDAAoB,UAAS,SAAQ;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;6CGFY,CAAA,SAAQ,AAAC,4CCAjC,SAAS,QAAO;AACN,AAAI,UAAA,yCCCP,SAAM,uCAAqC,CACpC,KAAI,CAAG,CAAA,MAAK,CAAG;AACzB,eAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;ACJrE,ADKI,wBCLU,iBAAiB,AAAC,wCAAkB,KAAK,MAAmB,CDK/D;AACP,aAAG,QAAQ,EAAI,EAAA,cAAc,EAAC,CAAA,KAAI,mBAAmB,EAAC,uCAAqC,KAAI,mBAAmB,EAAC,CAAA,MAAK,cAAc,EAAC,sBAAqB,EAAC,CAAA,MAAK,aAAa,EAAC,IAAE,CAAA,CAAC;QDLrI,ACMhD,CDNiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,0CCM5C,QAAO,CAAP,UAAQ,AAAC,CAAE;AACT,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,QAAQ,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC9D,MDPgE,SAAO,CAAC,CAAC;MACnE,AAAC,CCFmD,KAAI,CDErC,EDJ2C;AEYtE,WAAK,eAAe,AAAC,CAAC,sCAAqC,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACzF,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;2BFdmB,CAAA,SAAQ,AAAC,0BCAjC,SAAS,QAAO;AACN,AAAI,UAAA,uBCcP,SAAM,qBAAmB,CAClB,KAAI,CAAG,CAAA,iBAAgB,CAAG;AACpC,eAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,kBAAgB,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;ACjBhF,ADkBI,wBClBU,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CDkB/D;AACP,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,aAAG,SAAS,EAAI,CAAA,KAAI,mBAAmB,CAAC;AACxC,aAAG,QAAQ,IAAO,IAAG,kBAAkB,EAAC,QAAO,EAAC,CAAA,IAAG,SAAS,EAAC,IAAE,CAAA,CAAC;QDpBlB,ACqBhD,CDrBiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,wBCqB5C,QAAO,CAAP,UAAQ,AAAC,CAAE;AACT,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,QAAQ,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC9D,MDtBgE,SAAO,CAAC,CAAC;MACnE,AAAC,CCWiC,KAAI,CDXnB,EDJ2C;AE2BtE,WAAK,eAAe,AAAC,CAAC,oBAAmB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACvE,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IL3B0B;EAC3B,CAAA;ADDI,CAAC,CAAC;AM+B0B","file":"angular2/src/change_detection/exceptions.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {ProtoRecord} from './proto_change_detector';\nexport class ExpressionChangedAfterItHasBeenChecked extends Error {\n  constructor(proto, change) {\n    assert.argumentTypes(proto, ProtoRecord, change, assert.type.any);\n    super();\n    this.message = `Expression '${proto.expressionAsString}' has changed after it was checked. ` + `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nObject.defineProperty(ExpressionChangedAfterItHasBeenChecked, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.any]];\n  }});\nexport class ChangeDetectionError extends Error {\n  constructor(proto, originalException) {\n    assert.argumentTypes(proto, ProtoRecord, originalException, assert.type.any);\n    super();\n    this.originalException = originalException;\n    this.location = proto.expressionAsString;\n    this.message = `${this.originalException} in [${this.location}]`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nObject.defineProperty(ChangeDetectionError, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.any]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/change_detection/exceptions.map\n\n//# sourceMappingURL=./exceptions.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}