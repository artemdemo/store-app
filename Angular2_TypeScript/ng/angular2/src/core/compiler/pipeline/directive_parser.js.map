{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","angular2/src/core/compiler/pipeline/directive_parser.js","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/pipeline/directive_parser.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  isBlank,\n  BaseException} from 'angular2/src/facade/lang';\nimport {List,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {TemplateElement} from 'angular2/src/facade/dom';\nimport {SelectorMatcher} from '../selector';\nimport {CssSelector} from '../selector';\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {Component,\n  Viewport} from '../../annotations/annotations';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nexport class DirectiveParser extends CompileStep {\n  constructor(directives) {\n    assert.argumentTypes(directives, assert.genericType(List, DirectiveMetadata));\n    super();\n    this._selectorMatcher = new SelectorMatcher();\n    for (var i = 0; i < directives.length; i++) {\n      var directiveMetadata = directives[i];\n      this._selectorMatcher.addSelectable(CssSelector.parse(directiveMetadata.annotation.selector), directiveMetadata);\n    }\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    var attrs = current.attrs();\n    var classList = current.classList();\n    var cssSelector = new CssSelector();\n    cssSelector.setElement(current.element.nodeName);\n    for (var i = 0; i < classList.length; i++) {\n      cssSelector.addClassName(classList[i]);\n    }\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      if (isBlank(current.propertyBindings) || isPresent(current.propertyBindings) && !MapWrapper.contains(current.propertyBindings, attrName)) {\n        cssSelector.addAttribute(attrName, attrValue);\n      }\n    });\n    if (isPresent(current.propertyBindings)) {\n      MapWrapper.forEach(current.propertyBindings, (expression, prop) => {\n        cssSelector.addAttribute(prop, expression.source);\n      });\n    }\n    if (isPresent(current.variableBindings)) {\n      MapWrapper.forEach(current.variableBindings, (value, name) => {\n        cssSelector.addAttribute(name, value);\n      });\n    }\n    var isTemplateElement = current.element instanceof TemplateElement;\n    this._selectorMatcher.match(cssSelector, (directive) => {\n      if (directive.annotation instanceof Viewport) {\n        if (!isTemplateElement) {\n          throw new BaseException('Viewport directives need to be placed on <template> elements or elements with template attribute!');\n        } else if (isPresent(current.viewportDirective)) {\n          throw new BaseException('Only one template directive per element is allowed!');\n        }\n      } else if (isTemplateElement) {\n        throw new BaseException('Only template directives are allowed on <template> elements!');\n      } else if ((directive.annotation instanceof Component) && isPresent(current.componentDirective)) {\n        throw new BaseException('Only one component directive per element is allowed!');\n      }\n      current.addDirective(directive);\n    });\n  }\n}\nObject.defineProperty(DirectiveParser, \"parameters\", {get: function() {\n    return [[assert.genericType(List, DirectiveMetadata)]];\n  }});\nObject.defineProperty(DirectiveParser.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/pipeline/directive_parser.map\n\n//# sourceMappingURL=./directive_parser.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}