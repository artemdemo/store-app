{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","angular2/src/core/compiler/pipeline/shadow_dom_transformer.js","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/pipeline/shadow_dom_transformer.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {assert} from \"rtts_assert/rtts_assert\";\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {ShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {shimCssText} from 'angular2/src/core/compiler/shadow_dom_emulation/shim_css';\nimport {DOM,\n  Element} from 'angular2/src/facade/dom';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {StringMapWrapper} from 'angular2/src/facade/collection';\nvar _cssCache = StringMapWrapper.create();\nexport class ShadowDomTransformer extends CompileStep {\n  constructor(cmpMetadata, strategy, styleHost) {\n    assert.argumentTypes(cmpMetadata, DirectiveMetadata, strategy, ShadowDomStrategy, styleHost, Element);\n    super();\n    this._strategy = strategy;\n    this._selector = cmpMetadata.annotation.selector;\n    this._styleHost = styleHost;\n    this._lastInsertedStyle = null;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    if (DOM.tagName(current.element) == 'STYLE') {\n      current.ignoreBindings = true;\n      if (this._strategy.extractStyles()) {\n        DOM.remove(current.element);\n        var css = DOM.getText(current.element);\n        if (this._strategy.shim()) {\n          css = shimCssText(css, this._selector);\n          this._insertStyle(this._styleHost, css);\n        } else {\n          var seen = isPresent(StringMapWrapper.get(_cssCache, css));\n          if (!seen) {\n            StringMapWrapper.set(_cssCache, css, true);\n            this._insertStyle(this._styleHost, css);\n          }\n        }\n      }\n    } else {\n      if (this._strategy.shim()) {\n        try {\n          DOM.setAttribute(current.element, this._selector, '');\n        } catch (e) {}\n      }\n    }\n  }\n  clearCache() {\n    _cssCache = StringMapWrapper.create();\n  }\n  _insertStyle(el, css) {\n    assert.argumentTypes(el, Element, css, assert.type.string);\n    var style = DOM.createStyleElement(css);\n    if (isBlank(this._lastInsertedStyle)) {\n      var firstChild = DOM.firstChild(el);\n      if (isPresent(firstChild)) {\n        DOM.insertBefore(firstChild, style);\n      } else {\n        DOM.appendChild(el, style);\n      }\n    } else {\n      DOM.insertAfter(this._lastInsertedStyle, style);\n    }\n    this._lastInsertedStyle = style;\n  }\n}\nObject.defineProperty(ShadowDomTransformer, \"parameters\", {get: function() {\n    return [[DirectiveMetadata], [ShadowDomStrategy], [Element]];\n  }});\nObject.defineProperty(ShadowDomTransformer.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nObject.defineProperty(ShadowDomTransformer.prototype._insertStyle, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/pipeline/shadow_dom_transformer.map\n\n//# sourceMappingURL=./shadow_dom_transformer.map","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}