{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/view_pool.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yEAAoB,UAAS,SAAQ;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,WAAoB,KAAG,KAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,WAAoB,KAAG,KAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;eGFY,CAAA,SAAQ,AAAC,cCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,WCKP,SAAM,SAAO,CACN,QAAO,CAAG;AACpB,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAClD,aAAG,OAAO,EAAI,GAAC,CAAC;AAChB,aAAG,UAAU,EAAI,SAAO,CAAC;QDTqB,ACUhD,CDViD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ACU5C,YAAE,CAAF,UAAG,AAAC,CAAE;AACJ,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,WAAU,QAAQ,AAAC,CAAC,IAAG,OAAO,CAAC,CAAA,CAAI,KAAG,EAAI,CAAA,WAAU,WAAW,AAAC,CAAC,IAAG,OAAO,CAAC,CAAC,CAAG,KAAG,CAAC,CAAC;UACjH;AACA,aAAG,CAAH,UAAK,IAAG,CAAG;AACT,iBAAK,cAAc,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC;AAChC,eAAI,IAAG,OAAO,OAAO,EAAI,CAAA,IAAG,UAAU,CAAG;AACvC,wBAAU,KAAK,AAAC,CAAC,IAAG,OAAO,CAAG,KAAG,CAAC,CAAC;YACrC;AAAA,UACF;AACA,eAAK,CAAL,UAAM,AAAC,CAAE;AACP,iBAAO,CAAA,IAAG,OAAO,OAAO,CAAC;UAC3B;AAAA,aDpB8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AEyBtE,WAAK,eAAe,AAAC,CAAC,QAAO,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC3D,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,KAAK,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC1E,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IL5B0B;EAC3B,CAAA;ADDI,CAAC,CAAC;AMgCyB","file":"angular2/src/core/compiler/view_pool.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {assert} from \"rtts_assert/rtts_assert\";\nimport {ListWrapper,\n  MapWrapper,\n  StringMapWrapper,\n  List} from 'angular2/src/facade/collection';\nimport {View} from './view';\nexport class ViewPool {\n  constructor(capacity) {\n    assert.argumentTypes(capacity, assert.type.number);\n    this._views = [];\n    this._capacity = capacity;\n  }\n  pop() {\n    return assert.returnType((ListWrapper.isEmpty(this._views) ? null : ListWrapper.removeLast(this._views)), View);\n  }\n  push(view) {\n    assert.argumentTypes(view, View);\n    if (this._views.length < this._capacity) {\n      ListWrapper.push(this._views, view);\n    }\n  }\n  length() {\n    return this._views.length;\n  }\n}\nObject.defineProperty(ViewPool, \"parameters\", {get: function() {\n    return [[assert.type.number]];\n  }});\nObject.defineProperty(ViewPool.prototype.push, \"parameters\", {get: function() {\n    return [[View]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/view_pool.map\n\n//# sourceMappingURL=./view_pool.map"]}