{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/di/key.js"],"names":[],"mappings":"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","file":"angular2/src/di/key.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {assert} from \"rtts_assert/rtts_assert\";\nimport {KeyMetadataError} from './exceptions';\nimport {MapWrapper,\n  Map} from 'angular2/src/facade/collection';\nimport {FIELD,\n  int,\n  isPresent} from 'angular2/src/facade/lang';\nexport class Key {\n  constructor(token, id) {\n    assert.argumentTypes(token, assert.type.any, id, int);\n    this.token = token;\n    this.id = id;\n    this.metadata = null;\n  }\n  static setMetadata(key, metadata) {\n    assert.argumentTypes(key, Key, metadata, assert.type.any);\n    if (isPresent(key.metadata) && key.metadata !== metadata) {\n      throw new KeyMetadataError();\n    }\n    key.metadata = metadata;\n    return assert.returnType((key), Key);\n  }\n  static get(token) {\n    return assert.returnType((_globalKeyRegistry.get(token)), Key);\n  }\n  static get numberOfKeys() {\n    return assert.returnType((_globalKeyRegistry.numberOfKeys), int);\n  }\n}\nObject.defineProperty(Key, \"parameters\", {get: function() {\n    return [[], [int]];\n  }});\nObject.defineProperty(Key.setMetadata, \"parameters\", {get: function() {\n    return [[Key], []];\n  }});\nexport class KeyRegistry {\n  constructor() {\n    this._allKeys = MapWrapper.create();\n  }\n  get(token) {\n    if (token instanceof Key)\n      return assert.returnType((token), Key);\n    if (MapWrapper.contains(this._allKeys, token)) {\n      return assert.returnType((MapWrapper.get(this._allKeys, token)), Key);\n    }\n    var newKey = new Key(token, Key.numberOfKeys);\n    MapWrapper.set(this._allKeys, token, newKey);\n    return assert.returnType((newKey), Key);\n  }\n  get numberOfKeys() {\n    return assert.returnType((MapWrapper.size(this._allKeys)), int);\n  }\n}\nvar _globalKeyRegistry = new KeyRegistry();\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/di/key.map\n\n//# sourceMappingURL=./key.map"]}