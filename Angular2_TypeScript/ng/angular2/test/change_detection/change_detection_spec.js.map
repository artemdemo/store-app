{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/change_detection/change_detection_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/test/change_detection/change_detection_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach,\n  IS_DARTIUM} from 'angular2/test_lib';\nimport {isPresent,\n  isBlank,\n  isJsObject,\n  BaseException,\n  FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {Parser} from 'angular2/src/change_detection/parser/parser';\nimport {Lexer} from 'angular2/src/change_detection/parser/lexer';\nimport {arrayChangesAsString,\n  kvChangesAsString} from './util';\nimport {ChangeDispatcher,\n  DynamicChangeDetector,\n  ChangeDetectionError,\n  ContextWithVariableBindings,\n  CHECK_ALWAYS,\n  CHECK_ONCE,\n  CHECKED,\n  DETACHED} from 'angular2/change_detection';\nimport {JitProtoChangeDetector,\n  DynamicProtoChangeDetector} from 'angular2/src/change_detection/proto_change_detector';\nexport function main() {\n  describe(\"change detection\", () => {\n    StringMapWrapper.forEach({\n      \"dynamic\": () => new DynamicProtoChangeDetector(),\n      \"JIT\": () => new JitProtoChangeDetector()\n    }, (createProtoChangeDetector, name) => {\n      if (name == \"JIT\" && IS_DARTIUM)\n        return ;\n      function ast(exp, location = 'location') {\n        assert.argumentTypes(exp, assert.type.string, location, assert.type.string);\n        var parser = new Parser(new Lexer());\n        return parser.parseBinding(exp, location);\n      }\n      Object.defineProperty(ast, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string]];\n        }});\n      function createChangeDetector(memo, exp, context = null, formatters = null, structural = false) {\n        assert.argumentTypes(memo, assert.type.string, exp, assert.type.string, context, assert.type.any, formatters, assert.type.any, structural, assert.type.any);\n        var pcd = createProtoChangeDetector();\n        pcd.addAst(ast(exp), memo, memo, structural);\n        var dispatcher = new TestDispatcher();\n        var cd = pcd.instantiate(dispatcher, formatters);\n        cd.setContext(context);\n        return {\n          \"changeDetector\": cd,\n          \"dispatcher\": dispatcher\n        };\n      }\n      Object.defineProperty(createChangeDetector, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string], [], [], []];\n        }});\n      function executeWatch(memo, exp, context = null, formatters = null, content = false) {\n        assert.argumentTypes(memo, assert.type.string, exp, assert.type.string, context, assert.type.any, formatters, assert.type.any, content, assert.type.any);\n        var res = createChangeDetector(memo, exp, context, formatters, content);\n        res[\"changeDetector\"].detectChanges();\n        return res[\"dispatcher\"].log;\n      }\n      Object.defineProperty(executeWatch, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string], [], [], []];\n        }});\n      describe(`${name} change detection`, () => {\n        it('should do simple watching', () => {\n          var person = new Person(\"misko\");\n          var c = createChangeDetector('name', 'name', person);\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['name=misko']);\n          dispatcher.clear();\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n          dispatcher.clear();\n          person.name = \"Misko\";\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['name=Misko']);\n        });\n        it('should report all changes on the first run including uninitialized values', () => {\n          expect(executeWatch('value', 'value', new Uninitialized())).toEqual(['value=null']);\n        });\n        it('should report all changes on the first run including null values', () => {\n          var td = new TestData(null);\n          expect(executeWatch('a', 'a', td)).toEqual(['a=null']);\n        });\n        it(\"should support literals\", () => {\n          expect(executeWatch('const', '10')).toEqual(['const=10']);\n          expect(executeWatch('const', '\"str\"')).toEqual(['const=str']);\n          expect(executeWatch('const', '\"a\\n\\nb\"')).toEqual(['const=a\\n\\nb']);\n        });\n        it('simple chained property access', () => {\n          var address = new Address('Grenoble');\n          var person = new Person('Victor', address);\n          expect(executeWatch('address.city', 'address.city', person)).toEqual(['address.city=Grenoble']);\n        });\n        it(\"should support method calls\", () => {\n          var person = new Person('Victor');\n          expect(executeWatch('m', 'sayHi(\"Jim\")', person)).toEqual(['m=Hi, Jim']);\n        });\n        it(\"should support function calls\", () => {\n          var td = new TestData(() => (a) => a);\n          expect(executeWatch('value', 'a()(99)', td)).toEqual(['value=99']);\n        });\n        it(\"should support chained method calls\", () => {\n          var person = new Person('Victor');\n          var td = new TestData(person);\n          expect(executeWatch('m', 'a.sayHi(\"Jim\")', td)).toEqual(['m=Hi, Jim']);\n        });\n        it(\"should support literal array\", () => {\n          var c = createChangeDetector('array', '[1,2]');\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues).toEqual([[[1, 2]]]);\n          c = createChangeDetector('array', '[1,a]', new TestData(2));\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues).toEqual([[[1, 2]]]);\n        });\n        it(\"should support literal maps\", () => {\n          var c = createChangeDetector('map', '{z:1}');\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n          c = createChangeDetector('map', '{z:a}', new TestData(1));\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n        });\n        it(\"should support binary operations\", () => {\n          expect(executeWatch('exp', '10 + 2')).toEqual(['exp=12']);\n          expect(executeWatch('exp', '10 - 2')).toEqual(['exp=8']);\n          expect(executeWatch('exp', '10 * 2')).toEqual(['exp=20']);\n          expect(executeWatch('exp', '10 / 2')).toEqual([`exp=${5.0}`]);\n          expect(executeWatch('exp', '11 % 2')).toEqual(['exp=1']);\n          expect(executeWatch('exp', '1 == 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '1 != 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '1 < 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '2 > 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '1 <= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 <= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 <= 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '2 >= 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 >= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '1 >= 2')).toEqual(['exp=false']);\n          expect(executeWatch('exp', 'true && true')).toEqual(['exp=true']);\n          expect(executeWatch('exp', 'true && false')).toEqual(['exp=false']);\n          expect(executeWatch('exp', 'true || false')).toEqual(['exp=true']);\n          expect(executeWatch('exp', 'false || false')).toEqual(['exp=false']);\n        });\n        it(\"should support negate\", () => {\n          expect(executeWatch('exp', '!true')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '!!true')).toEqual(['exp=true']);\n        });\n        it(\"should support conditionals\", () => {\n          expect(executeWatch('m', '1 < 2 ? 1 : 2')).toEqual(['m=1']);\n          expect(executeWatch('m', '1 > 2 ? 1 : 2')).toEqual(['m=2']);\n        });\n        describe(\"keyed access\", () => {\n          it(\"should support accessing a list item\", () => {\n            expect(executeWatch('array[0]', '[\"foo\", \"bar\"][0]')).toEqual(['array[0]=foo']);\n          });\n          it(\"should support accessing a map item\", () => {\n            expect(executeWatch('map[foo]', '{\"foo\": \"bar\"}[\"foo\"]')).toEqual(['map[foo]=bar']);\n          });\n        });\n        it(\"should support formatters\", () => {\n          var formatters = MapWrapper.createFromPairs([['uppercase', (v) => v.toUpperCase()], ['wrap', (v, before, after) => `${before}${v}${after}`]]);\n          expect(executeWatch('str', '\"aBc\" | uppercase', null, formatters)).toEqual(['str=ABC']);\n          expect(executeWatch('str', '\"b\" | wrap:\"a\":\"c\"', null, formatters)).toEqual(['str=abc']);\n        });\n        it(\"should support interpolation\", () => {\n          var parser = new Parser(new Lexer());\n          var pcd = createProtoChangeDetector();\n          var ast = parser.parseInterpolation(\"B{{a}}A\", \"location\");\n          pcd.addAst(ast, \"memo\", \"memo\", false);\n          var dispatcher = new TestDispatcher();\n          var cd = pcd.instantiate(dispatcher, MapWrapper.create());\n          cd.setContext(new TestData(\"value\"));\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([\"memo=BvalueA\"]);\n        });\n        describe(\"group changes\", () => {\n          it(\"should notify the dispatcher when a group of records changes\", () => {\n            var pcd = createProtoChangeDetector();\n            pcd.addAst(ast(\"1 + 2\"), \"memo\", \"1\");\n            pcd.addAst(ast(\"10 + 20\"), \"memo\", \"1\");\n            pcd.addAst(ast(\"100 + 200\"), \"memo2\", \"2\");\n            var dispatcher = new TestDispatcher();\n            var cd = pcd.instantiate(dispatcher, null);\n            cd.detectChanges();\n            expect(dispatcher.loggedValues).toEqual([[3, 30], [300]]);\n          });\n          it(\"should notify the dispatcher before switching to the next group\", () => {\n            var pcd = createProtoChangeDetector();\n            pcd.addAst(ast(\"a()\"), \"a\", \"1\");\n            pcd.addAst(ast(\"b()\"), \"b\", \"2\");\n            pcd.addAst(ast(\"c()\"), \"c\", \"2\");\n            var dispatcher = new TestDispatcher();\n            var cd = pcd.instantiate(dispatcher, null);\n            var tr = new TestRecord();\n            tr.a = () => {\n              dispatcher.logValue('InvokeA');\n              return 'a';\n            };\n            tr.b = () => {\n              dispatcher.logValue('InvokeB');\n              return 'b';\n            };\n            tr.c = () => {\n              dispatcher.logValue('InvokeC');\n              return 'c';\n            };\n            cd.setContext(tr);\n            cd.detectChanges();\n            expect(dispatcher.loggedValues).toEqual(['InvokeA', ['a'], 'InvokeB', 'InvokeC', ['b', 'c']]);\n          });\n        });\n        describe(\"enforce no new changes\", () => {\n          it(\"should throw when a record gets changed after it has been checked\", () => {\n            var pcd = createProtoChangeDetector();\n            pcd.addAst(ast(\"a\"), \"a\", 1);\n            var dispatcher = new TestDispatcher();\n            var cd = pcd.instantiate(dispatcher, null);\n            cd.setContext(new TestData('value'));\n            expect(() => {\n              cd.checkNoChanges();\n            }).toThrowError(new RegExp(\"Expression 'a in location' has changed after it was checked\"));\n          });\n        });\n        describe(\"error handling\", () => {\n          xit(\"should wrap exceptions into ChangeDetectionError\", () => {\n            var pcd = createProtoChangeDetector();\n            pcd.addAst(ast('invalidProp', 'someComponent'), \"a\", 1);\n            var cd = pcd.instantiate(new TestDispatcher(), null);\n            cd.setContext(null);\n            try {\n              cd.detectChanges();\n              throw new BaseException(\"fail\");\n            } catch (e) {\n              expect(e).toBeAnInstanceOf(ChangeDetectionError);\n              expect(e.location).toEqual(\"invalidProp in someComponent\");\n            }\n          });\n        });\n        describe(\"collections\", () => {\n          it(\"should not register a change when going from null to null\", () => {\n            var context = new TestData(null);\n            var c = createChangeDetector('a', 'a', context, null, true);\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([]);\n          });\n          it(\"should register changes when switching from null to collection and back\", () => {\n            var context = new TestData(null);\n            var c = createChangeDetector('a', 'a', context, null, true);\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n            context.a = [0];\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([\"a=\" + arrayChangesAsString({\n              collection: ['0[null->0]'],\n              additions: ['0[null->0]']\n            })]);\n            dispatcher.clear();\n            context.a = null;\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual(['a=null']);\n          });\n          describe(\"list\", () => {\n            it(\"should support list changes\", () => {\n              var context = new TestData([1, 2]);\n              expect(executeWatch(\"a\", \"a\", context, null, true)).toEqual([\"a=\" + arrayChangesAsString({\n                collection: ['1[null->0]', '2[null->1]'],\n                additions: ['1[null->0]', '2[null->1]']\n              })]);\n            });\n            it(\"should handle reference changes\", () => {\n              var context = new TestData([1, 2]);\n              var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n              var cd = objs[\"changeDetector\"];\n              var dispatcher = objs[\"dispatcher\"];\n              cd.detectChanges();\n              dispatcher.clear();\n              context.a = [2, 1];\n              cd.detectChanges();\n              expect(dispatcher.log).toEqual([\"a=\" + arrayChangesAsString({\n                collection: ['2[1->0]', '1[0->1]'],\n                previous: ['1[0->1]', '2[1->0]'],\n                moves: ['2[1->0]', '1[0->1]']\n              })]);\n            });\n          });\n          describe(\"map\", () => {\n            it(\"should support map changes\", () => {\n              var map = MapWrapper.create();\n              MapWrapper.set(map, \"foo\", \"bar\");\n              var context = new TestData(map);\n              expect(executeWatch(\"a\", \"a\", context, null, true)).toEqual([\"a=\" + kvChangesAsString({\n                map: ['foo[null->bar]'],\n                additions: ['foo[null->bar]']\n              })]);\n            });\n            it(\"should handle reference changes\", () => {\n              var map = MapWrapper.create();\n              MapWrapper.set(map, \"foo\", \"bar\");\n              var context = new TestData(map);\n              var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n              var cd = objs[\"changeDetector\"];\n              var dispatcher = objs[\"dispatcher\"];\n              cd.detectChanges();\n              dispatcher.clear();\n              context.a = MapWrapper.create();\n              MapWrapper.set(context.a, \"bar\", \"foo\");\n              cd.detectChanges();\n              expect(dispatcher.log).toEqual([\"a=\" + kvChangesAsString({\n                map: ['bar[null->foo]'],\n                previous: ['foo[bar->null]'],\n                additions: ['bar[null->foo]'],\n                removals: ['foo[bar->null]']\n              })]);\n            });\n          });\n          if (!IS_DARTIUM) {\n            describe(\"js objects\", () => {\n              it(\"should support object changes\", () => {\n                var map = {\"foo\": \"bar\"};\n                var context = new TestData(map);\n                expect(executeWatch(\"a\", \"a\", context, null, true)).toEqual([\"a=\" + kvChangesAsString({\n                  map: ['foo[null->bar]'],\n                  additions: ['foo[null->bar]']\n                })]);\n              });\n            });\n          }\n        });\n        describe(\"ContextWithVariableBindings\", () => {\n          it('should read a field from ContextWithVariableBindings', () => {\n            var locals = new ContextWithVariableBindings(null, MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            expect(executeWatch('key', 'key', locals)).toEqual(['key=value']);\n          });\n          it('should handle nested ContextWithVariableBindings', () => {\n            var nested = new ContextWithVariableBindings(null, MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            var locals = new ContextWithVariableBindings(nested, MapWrapper.create());\n            expect(executeWatch('key', 'key', locals)).toEqual(['key=value']);\n          });\n          it(\"should fall back to a regular field read when ContextWithVariableBindings \" + \"does not have the requested field\", () => {\n            var locals = new ContextWithVariableBindings(new Person(\"Jim\"), MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            expect(executeWatch('name', 'name', locals)).toEqual(['name=Jim']);\n          });\n        });\n        describe(\"handle children\", () => {\n          var parent,\n              child;\n          beforeEach(() => {\n            var protoParent = createProtoChangeDetector();\n            parent = protoParent.instantiate(null, null);\n            var protoChild = createProtoChangeDetector();\n            child = protoChild.instantiate(null, null);\n          });\n          it(\"should add children\", () => {\n            parent.addChild(child);\n            expect(parent.children.length).toEqual(1);\n            expect(parent.children[0]).toBe(child);\n          });\n          it(\"should remove children\", () => {\n            parent.addChild(child);\n            parent.removeChild(child);\n            expect(parent.children).toEqual([]);\n          });\n        });\n      });\n      describe(\"optimizations\", () => {\n        it(\"should not rerun formatters when args did not change\", () => {\n          var count = 0;\n          var formatters = MapWrapper.createFromPairs([['count', (v) => {\n            count++;\n            \"value\";\n          }]]);\n          var c = createChangeDetector('a', 'a | count', new TestData(null), formatters);\n          var cd = c[\"changeDetector\"];\n          cd.detectChanges();\n          expect(count).toEqual(1);\n          cd.detectChanges();\n          expect(count).toEqual(1);\n        });\n      });\n      describe(\"mode\", () => {\n        it(\"should not check a detached change detector\", () => {\n          var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.mode = DETACHED;\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n        });\n        it(\"should not check a checked change detector\", () => {\n          var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.mode = CHECKED;\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n        });\n        it(\"should change CHECK_ONCE to CHECKED\", () => {\n          var cd = createProtoChangeDetector().instantiate(null, null);\n          cd.mode = CHECK_ONCE;\n          cd.detectChanges();\n          expect(cd.mode).toEqual(CHECKED);\n        });\n        it(\"should not change the CHECK_ALWAYS\", () => {\n          var cd = createProtoChangeDetector().instantiate(null, null);\n          cd.mode = CHECK_ALWAYS;\n          cd.detectChanges();\n          expect(cd.mode).toEqual(CHECK_ALWAYS);\n        });\n      });\n      describe(\"markPathToRootAsCheckOnce\", () => {\n        function changeDetector(mode, parent) {\n          var cd = createProtoChangeDetector().instantiate(null, null);\n          cd.mode = mode;\n          if (isPresent(parent))\n            parent.addChild(cd);\n          return cd;\n        }\n        it(\"should mark all checked detectors as CHECK_ONCE \" + \"until reaching a detached one\", () => {\n          var root = changeDetector(CHECK_ALWAYS, null);\n          var disabled = changeDetector(DETACHED, root);\n          var parent = changeDetector(CHECKED, disabled);\n          var checkAlwaysChild = changeDetector(CHECK_ALWAYS, parent);\n          var checkOnceChild = changeDetector(CHECK_ONCE, checkAlwaysChild);\n          var checkedChild = changeDetector(CHECKED, checkOnceChild);\n          checkedChild.markPathToRootAsCheckOnce();\n          expect(root.mode).toEqual(CHECK_ALWAYS);\n          expect(disabled.mode).toEqual(DETACHED);\n          expect(parent.mode).toEqual(CHECK_ONCE);\n          expect(checkAlwaysChild.mode).toEqual(CHECK_ALWAYS);\n          expect(checkOnceChild.mode).toEqual(CHECK_ONCE);\n          expect(checkedChild.mode).toEqual(CHECK_ONCE);\n        });\n      });\n    });\n  });\n}\nclass TestRecord {}\nclass Person {\n  constructor(name, address = null) {\n    assert.argumentTypes(name, assert.type.string, address, Address);\n    this.name = name;\n    this.address = address;\n  }\n  sayHi(m) {\n    return `Hi, ${m}`;\n  }\n  toString() {\n    var address = this.address == null ? '' : ' address=' + this.address.toString();\n    return assert.returnType(('name=' + this.name + address), assert.type.string);\n  }\n}\nObject.defineProperty(Person, \"parameters\", {get: function() {\n    return [[assert.type.string], [Address]];\n  }});\nclass Address {\n  constructor(city) {\n    assert.argumentTypes(city, assert.type.string);\n    this.city = city;\n  }\n  toString() {\n    return assert.returnType((this.city), assert.type.string);\n  }\n}\nObject.defineProperty(Address, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nclass Uninitialized {}\nclass TestData {\n  constructor(a) {\n    this.a = a;\n  }\n}\nclass TestDispatcher extends ChangeDispatcher {\n  constructor() {\n    super();\n    this.log = null;\n    this.loggedValues = null;\n    this.onChange = (_, __) => {};\n    this.clear();\n  }\n  clear() {\n    this.log = ListWrapper.create();\n    this.loggedValues = ListWrapper.create();\n  }\n  logValue(value) {\n    ListWrapper.push(this.loggedValues, value);\n  }\n  onRecordChange(group, updates) {\n    var value = updates[0].change.currentValue;\n    var memento = updates[0].bindingMemento;\n    ListWrapper.push(this.log, memento + '=' + this._asString(value));\n    var values = ListWrapper.map(updates, (r) => r.change.currentValue);\n    ListWrapper.push(this.loggedValues, values);\n    this.onChange(group, updates);\n  }\n  _asString(value) {\n    return (isBlank(value) ? 'null' : value.toString());\n  }\n}\nObject.defineProperty(TestDispatcher.prototype.onRecordChange, \"parameters\", {get: function() {\n    return [[], [List]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/change_detection/change_detection_spec.map\n\n//# sourceMappingURL=./change_detection_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}