{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/change_detection/util.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8BAAoB,UAAS,SAAQ;;;ACC7C,SAAS,qBAAmB,CAAE,IAI3B;;AAJ4B,iBAAS;AAC7C,eAAO;AACP,gBAAQ;AACR,YAAI;AACJ,eAAO;AACP,OAAI,OAAM,AAAC,CAAC,UAAS,CAAC;AACpB,eAAS,EAAI,GAAC,CAAC;AAAA,AACjB,OAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAClB,aAAO,EAAI,GAAC,CAAC;AAAA,AACf,OAAI,OAAM,AAAC,CAAC,SAAQ,CAAC;AACnB,cAAQ,EAAI,GAAC,CAAC;AAAA,AAChB,OAAI,OAAM,AAAC,CAAC,KAAI,CAAC;AACf,UAAI,EAAI,GAAC,CAAC;AAAA,AACZ,OAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAClB,aAAO,EAAI,GAAC,CAAC;AAAA,AACf,SAAO,CAAA,cAAa,EAAI,CAAA,UAAS,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,cAAY,CAAA,CAAI,CAAA,SAAQ,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,UAAQ,CAAA,CAAI,CAAA,KAAI,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAC;EAClO;AACO,SAAS,kBAAgB,CAAE,IAIxB;;AAJyB,UAAE;AACnC,eAAO;AACP,gBAAQ;AACR,cAAM;AACN,eAAO;AACP,OAAI,OAAM,AAAC,CAAC,GAAE,CAAC;AACb,QAAE,EAAI,GAAC,CAAC;AAAA,AACV,OAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAClB,aAAO,EAAI,GAAC,CAAC;AAAA,AACf,OAAI,OAAM,AAAC,CAAC,SAAQ,CAAC;AACnB,cAAQ,EAAI,GAAC,CAAC;AAAA,AAChB,OAAI,OAAM,AAAC,CAAC,OAAM,CAAC;AACjB,YAAM,EAAI,GAAC,CAAC;AAAA,AACd,OAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAClB,aAAO,EAAI,GAAC,CAAC;AAAA,AACf,SAAO,CAAA,OAAM,EAAI,CAAA,GAAE,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,cAAY,CAAA,CAAI,CAAA,SAAQ,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,YAAU,CAAA,CAAI,CAAA,OAAM,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAC;EACxN;ACjCQ,UAAQ,AAAC,8CAAqC,CAAA;AAA9C,UAAQ,AAAC,wCAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,cAAoB,KAAG,QAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AHDI,CAAC,CAAC;ACoCoB","file":"angular2/test/change_detection/util.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {isBlank} from 'angular2/src/facade/lang';\nexport function arrayChangesAsString({collection,\n  previous,\n  additions,\n  moves,\n  removals}) {\n  if (isBlank(collection))\n    collection = [];\n  if (isBlank(previous))\n    previous = [];\n  if (isBlank(additions))\n    additions = [];\n  if (isBlank(moves))\n    moves = [];\n  if (isBlank(removals))\n    removals = [];\n  return \"collection: \" + collection.join(', ') + \"\\n\" + \"previous: \" + previous.join(', ') + \"\\n\" + \"additions: \" + additions.join(', ') + \"\\n\" + \"moves: \" + moves.join(', ') + \"\\n\" + \"removals: \" + removals.join(', ') + \"\\n\";\n}\nexport function kvChangesAsString({map,\n  previous,\n  additions,\n  changes,\n  removals}) {\n  if (isBlank(map))\n    map = [];\n  if (isBlank(previous))\n    previous = [];\n  if (isBlank(additions))\n    additions = [];\n  if (isBlank(changes))\n    changes = [];\n  if (isBlank(removals))\n    removals = [];\n  return \"map: \" + map.join(', ') + \"\\n\" + \"previous: \" + previous.join(', ') + \"\\n\" + \"additions: \" + additions.join(', ') + \"\\n\" + \"changes: \" + changes.join(', ') + \"\\n\" + \"removals: \" + removals.join(', ') + \"\\n\";\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/change_detection/util.map\n\n//# sourceMappingURL=./util.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}