{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/pipeline/pipeline_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,qWAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;;ACmB7C,SAAS,KAAG,CAAC,AAAC;AACnB,WAAO,AAAC,CAAC,kBAAiB,GAAG,SAAA,AAAC;AAC5B,aAAO,AAAC,CAAC,sBAAqB,GAAG,SAAA,AAAC;AAChC,SAAC,AAAC,CAAC,uEAAsE,GAAG,SAAA,AAAC,CAAK;AAChF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oEAAmE,CAAC,CAAC;AACtF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,GAAI,gBAAc,AAAC,CAAC,CAAC,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAChF,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACvD,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,4DAA2D,GAAG,SAAA,AAAC,CAAK;AACrE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oFAAmF,CAAC,CAAC;AACtG,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,mBAAiB,AAAC,EAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC1F,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACvC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAClD,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,mBAAkB,GAAG,SAAA,AAAC;AAC7B,SAAC,AAAC,CAAC,wEAAuE,GAAG,SAAA,AAAC,CAAK;AACjF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AACtG,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACjE,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,yEAAwE,GAAG,SAAA,AAAC,CAAK;AAClF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC5I,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,2EAA0E,GAAG,SAAA,AAAC,CAAK;AACpF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC5I,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,UAAQ,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,4DAA2D,GAAG,SAAA,AAAC,CAAK;AACrE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AACtG,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,kBAAiB,GAAG,SAAA,AAAC;AAC5B,SAAC,AAAC,CAAC,8DAA6D,GAAG,SAAA,AAAC;AAClE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,sCAAqC,CAAC,CAAC;AACxD,AAAI,YAAA,CAAA,SAAQ,EAAI,GAAC,CAAC;AAClB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,eAAa,AAAC,CAAC,EAAC,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAC;AAC3D,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAC7E,eAAI,aAAY,OAAO,AAAC,CAAC,OAAM,QAAQ,GAAG,CAAG,IAAE,CAAC,CAAG;AACjD,oBAAM,SAAS,AAAC,CAAC,QAAO,CAAC,CAAC;YAC5B;AAAA,UACF,EAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,SAAQ,CAAC,CAAC,CAAC,CAAC;AACjC,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,MAAK,CAAE,CAAA,CAAC,CAAC,KAAK,AAAC,CAAC,QAAO,CAAC,CAAC;AAChC,eAAK,AAAC,CAAC,SAAQ,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC9C,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACtD,EAAC,CAAC;MACJ,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AA0BA,SAAS,SAAO,CAAE,GAAE,CAAG,CAAA,MAAK,CAAG,CAAA,OAAM,CAAG;AACtC,AAAI,MAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,OAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,aAAO,EAAI,CAAA,MAAK,QAAQ,aAAa,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,IAAE,CAAC;IACpD;AAAA,AACA,cAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,QAAO,EAAI,CAAA,OAAM,QAAQ,aAAa,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;EACtE;AAAA,AACA,SAAS,iBAAe,CAAE,GAAE;AAC1B,SAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,aAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;EACJ;AACA,SAAS,kBAAgB,CAAE,SAAQ,CAAG,CAAA,GAAE;AACtC,AAAI,MAAA,CAAA,aAAY,EAAI,EAAA,CAAC;AACrB,SAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,AAAI,QAAA,CAAA,cAAa,EAAI,CAAA,OAAM,QAAQ,aAAa,AAAC,CAAC,SAAQ,CAAC,CAAC;AAC5D,SAAI,SAAQ,AAAC,CAAC,cAAa,CAAC,CAAG;AAC7B,AAAI,UAAA,CAAA,WAAU,EAAI,CAAA,aAAY,SAAS,AAAC,CAAC,cAAa,CAAG,GAAC,CAAC,CAAC;AAC5D,cAAO,WAAU,EAAI,EAAA,CAAG;AACtB,gBAAM,UAAU,AAAC,CAAC,GAAI,eAAa,AAAC,CAAC,EAAC,AAAC,EAAC,UAAS,EAAC,UAAQ,EAAC,IAAG,EAAC,CAAA,aAAY,EAAE,EAAC,UAAO,EAAC,CAAC,CAAC,CAAC;AACzF,oBAAU,EAAE,CAAC;QACf;AAAA,MACF;AAAA,AACA,aAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;EACJ;AACA,SAAS,YAAU,CAAE,MAAK;AACxB,AAAI,MAAA,CAAA,KAAI,EAAI,GAAC,CAAC;AACd,cAAU,QAAQ,AAAC,CAAC,MAAK,GAAG,SAAC,OAAM,CAAM;AACvC,aAAO,AAAC,CAAC,KAAI,CAAG,KAAG,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;AACF,SAAO,MAAI,CAAC;EACd;AC9JQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,WAAoB,KAAG,KAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,UAAoB,KAAG,IAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,sBAAoB,KAAG,gBAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;AGFZ,iBCAA,SAAS,QAAO;AACN,AAAI,UAAA,WNqGd,SAAM,SAAO,CACC,OAAM,CAAG;AOvGvB,APwGI,wBOxGU,iBAAiB,AAAC,UAAkB,KAAK,MAAmB,CPwG/D;AACP,aAAG,eAAe,EAAI,QAAM,CAAC;QMxGiB,ANyGhD,CMzGiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,YNyG5C,OAAM,CAAN,UAAQ,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAG;AAChC,iBAAK,cAAc,AAAC,CAAC,MAAK,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAC,CAAC;AAC9F,eAAG,eAAe,AAAC,CAAC,MAAK,CAAG,QAAM,CAAG,QAAM,CAAC,CAAC;UAC/C,MM3GgE,SAAO,CAAC,CAAC;MACnE,AAAC,CNkGc,WAAU,CMlGN,CDJS,CAAA;ALgHpC,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;yBQlHmB,CAAA,SAAQ,AAAC,wBFAjC,SAAS,QAAO;AACN,AAAI,UAAA,qBNkHP,SAAM,mBAAiB;ASnH9B,wBAAc,iBAAiB,AAAC,oBACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;QHAA,AN0HlD,CM1HmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,sBNkH5C,OAAM,CAAN,UAAQ,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAG;AAChC,iBAAK,cAAc,AAAC,CAAC,MAAK,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAC,CAAC;AAC9F,AAAI,cAAA,CAAA,YAAW,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;AACpD,eAAI,UAAS,SAAS,AAAC,CAAC,YAAW,CAAG,kBAAgB,CAAC,CAAG;AACxD,oBAAM,gBAAgB,EAAI,MAAI,CAAC;YACjC;AAAA,UACF,MMvHgE,SAAO,CAAC,CAAC;MACnE,AAAC,CN+G+B,WAAU,CM/GvB,EEJ2C;AR4HtE,WAAK,eAAe,AAAC,CAAC,kBAAiB,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACvF,eAAO,EAAC,CAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IE5H0B;EAC3B,CAAA;AHDI,CAAC,CAAC;ACiK6B","file":"angular2/test/core/compiler/pipeline/pipeline_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  beforeEach,\n  it,\n  expect,\n  iit,\n  ddescribe,\n  el} from 'angular2/test_lib';\nimport {ListWrapper,\n  List,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {isPresent,\n  NumberWrapper,\n  StringWrapper} from 'angular2/src/facade/lang';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step';\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\nexport function main() {\n  describe('compile_pipeline', () => {\n    describe('children compilation', () => {\n      it('should walk the tree in depth first order including template contents', () => {\n        var element = el('<div id=\"1\"><template id=\"2\"><span id=\"3\"></span></template></div>');\n        var step0Log = [];\n        var results = new CompilePipeline([createLoggerStep(step0Log)]).process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(resultIdLog(results)).toEqual(['1', '2', '3']);\n      });\n      it('should stop walking the tree when compileChildren is false', () => {\n        var element = el('<div id=\"1\"><template id=\"2\" ignore-children><span id=\"3\"></span></template></div>');\n        var step0Log = [];\n        var pipeline = new CompilePipeline([new IgnoreChildrenStep(), createLoggerStep(step0Log)]);\n        var results = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2']);\n        expect(resultIdLog(results)).toEqual(['1', '2']);\n      });\n    });\n    describe('control.addParent', () => {\n      it('should report the new parent to the following processor and the result', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([createWrapperStep('wrap0', step0Log), createLoggerStep(step1Log)]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', '3']);\n      });\n      it('should allow to add a parent by multiple processors to the same element', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" wrap1=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([createWrapperStep('wrap0', step0Log), createWrapperStep('wrap1', step1Log), createLoggerStep(step2Log)]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap1#0', 'wrap1#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap1#0', '2', '3']);\n      });\n      it('should allow to add a parent by multiple processors to different elements', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\" wrap1=\"1\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([createWrapperStep('wrap0', step0Log), createWrapperStep('wrap1', step1Log), createLoggerStep(step2Log)]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<wrap1#0', 'wrap1#0<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', 'wrap1#0', '3']);\n      });\n      it('should allow to add multiple parents by the same processor', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"2\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([createWrapperStep('wrap0', step0Log), createLoggerStep(step1Log)]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap0#1', 'wrap0#1<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap0#1', '2', '3']);\n      });\n    });\n    describe('control.addChild', () => {\n      it('should report the new child to all processors and the result', () => {\n        var element = el('<div id=\"1\"><div id=\"2\"></div></div>');\n        var resultLog = [];\n        var newChild = new CompileElement(el('<div id=\"3\"></div>'));\n        var pipeline = new CompilePipeline([new MockStep((parent, current, control) => {\n          if (StringWrapper.equals(current.element.id, '1')) {\n            control.addChild(newChild);\n          }\n        }), createLoggerStep(resultLog)]);\n        var result = pipeline.process(element);\n        expect(result[2]).toBe(newChild);\n        expect(resultLog).toEqual(['1', '1<2', '1<3']);\n        expect(resultIdLog(result)).toEqual(['1', '2', '3']);\n      });\n    });\n  });\n}\nclass MockStep extends CompileStep {\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    this.processClosure(parent, current, control);\n  }\n}\nObject.defineProperty(MockStep.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nexport class IgnoreChildrenStep extends CompileStep {\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    var attributeMap = DOM.attributeMap(current.element);\n    if (MapWrapper.contains(attributeMap, 'ignore-children')) {\n      current.compileChildren = false;\n    }\n  }\n}\nObject.defineProperty(IgnoreChildrenStep.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nfunction logEntry(log, parent, current) {\n  var parentId = '';\n  if (isPresent(parent)) {\n    parentId = parent.element.getAttribute('id') + '<';\n  }\n  ListWrapper.push(log, parentId + current.element.getAttribute('id'));\n}\nfunction createLoggerStep(log) {\n  return new MockStep((parent, current, control) => {\n    logEntry(log, parent, current);\n  });\n}\nfunction createWrapperStep(wrapperId, log) {\n  var nextElementId = 0;\n  return new MockStep((parent, current, control) => {\n    var parentCountStr = current.element.getAttribute(wrapperId);\n    if (isPresent(parentCountStr)) {\n      var parentCount = NumberWrapper.parseInt(parentCountStr, 10);\n      while (parentCount > 0) {\n        control.addParent(new CompileElement(el(`<a id=\"${wrapperId}#${nextElementId++}\"></a>`)));\n        parentCount--;\n      }\n    }\n    logEntry(log, parent, current);\n  });\n}\nfunction resultIdLog(result) {\n  var idLog = [];\n  ListWrapper.forEach(result, (current) => {\n    logEntry(idLog, null, current);\n  });\n  return idLog;\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/core/compiler/pipeline/pipeline_spec.map\n\n//# sourceMappingURL=./pipeline_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)"]}