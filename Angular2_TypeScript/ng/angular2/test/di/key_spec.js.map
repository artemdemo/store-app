{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/di/key_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"angular2/test/di/key_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe,\n  iit,\n  it,\n  expect,\n  beforeEach} from 'angular2/test_lib';\nimport {Key,\n  KeyRegistry} from 'angular2/di';\nexport function main() {\n  describe(\"key\", function() {\n    var registry;\n    beforeEach(function() {\n      registry = new KeyRegistry();\n    });\n    it('should be equal to another key if type is the same', function() {\n      expect(registry.get('car')).toBe(registry.get('car'));\n    });\n    it('should not be equal to another key if types are different', function() {\n      expect(registry.get('car')).not.toBe(registry.get('porsche'));\n    });\n    it('should return the passed in key', function() {\n      expect(registry.get(registry.get('car'))).toBe(registry.get('car'));\n    });\n    describe(\"metadata\", function() {\n      it(\"should assign metadata to a key\", function() {\n        var key = registry.get('car');\n        Key.setMetadata(key, \"meta\");\n        expect(key.metadata).toEqual(\"meta\");\n      });\n      it(\"should allow assigning the same metadata twice\", function() {\n        var key = registry.get('car');\n        Key.setMetadata(key, \"meta\");\n        Key.setMetadata(key, \"meta\");\n        expect(key.metadata).toEqual(\"meta\");\n      });\n      it(\"should throw when assigning different metadata\", function() {\n        var key = registry.get('car');\n        Key.setMetadata(key, \"meta1\");\n        expect(() => Key.setMetadata(key, \"meta2\")).toThrowError();\n      });\n    });\n  });\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/di/key_spec.map\n\n//# sourceMappingURL=./key_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}