{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchmarks/src/element_injector/element_injector_benchmark.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"benchmarks/src/element_injector/element_injector_benchmark.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {Injector} from 'angular2/di';\nimport {ProtoElementInjector} from 'angular2/src/core/compiler/element_injector';\nimport {getIntParameter,\n  bindAction} from 'angular2/src/test_lib/benchmark_util';\nvar count = 0;\nfunction setupReflector() {\n  reflector.registerType(A, {\n    'factory': () => new A(),\n    'parameters': [],\n    'annotations': []\n  });\n  reflector.registerType(B, {\n    'factory': () => new B(),\n    'parameters': [],\n    'annotations': []\n  });\n  reflector.registerType(C, {\n    'factory': (a, b) => new C(a, b),\n    'parameters': [[A], [B]],\n    'annotations': []\n  });\n}\nexport function main() {\n  var iterations = getIntParameter('iterations');\n  setupReflector();\n  var appInjector = new Injector([]);\n  var bindings = [A, B, C];\n  var proto = new ProtoElementInjector(null, 0, bindings);\n  var elementInjector = proto.instantiate(null, null, null);\n  function instantiate() {\n    for (var i = 0; i < iterations; ++i) {\n      var ei = proto.instantiate(null, null, null);\n      ei.instantiateDirectives(appInjector, null, null);\n    }\n  }\n  function instantiateDirectives() {\n    for (var i = 0; i < iterations; ++i) {\n      elementInjector.clearDirectives();\n      elementInjector.instantiateDirectives(appInjector, null, null);\n    }\n  }\n  bindAction('#instantiate', instantiate);\n  bindAction('#instantiateDirectives', instantiateDirectives);\n}\nclass A {\n  constructor() {\n    count++;\n  }\n}\nclass B {\n  constructor() {\n    count++;\n  }\n}\nclass C {\n  constructor(a, b) {\n    assert.argumentTypes(a, A, b, B);\n    count++;\n  }\n}\nObject.defineProperty(C, \"parameters\", {get: function() {\n    return [[A], [B]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchmarks/src/element_injector/element_injector_benchmark.map\n\n//# sourceMappingURL=./element_injector_benchmark.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}