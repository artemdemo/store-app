{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchmarks/src/naive_infinite_scroll/random_data.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"benchmarks/src/naive_infinite_scroll/random_data.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {int,\n  StringWrapper} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {CustomDate,\n  Offering,\n  Company,\n  Opportunity,\n  Account,\n  STATUS_LIST,\n  AAT_STATUS_LIST} from './common';\nexport function generateOfferings(count) {\n  assert.argumentTypes(count, int);\n  var res = [];\n  for (var i = 0; i < count; i++) {\n    ListWrapper.push(res, generateOffering(i));\n  }\n  return assert.returnType((res), assert.genericType(List, Offering));\n}\nObject.defineProperty(generateOfferings, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nexport function generateOffering(seed) {\n  assert.argumentTypes(seed, int);\n  var res = new Offering();\n  res.name = generateName(seed++);\n  res.company = generateCompany(seed++);\n  res.opportunity = generateOpportunity(seed++);\n  res.account = generateAccount(seed++);\n  res.basePoints = seed % 10;\n  res.kickerPoints = seed % 4;\n  res.status = STATUS_LIST[seed % STATUS_LIST.length];\n  res.bundles = randomString(seed++);\n  res.dueDate = randomDate(seed++);\n  res.endDate = randomDate(seed++, res.dueDate);\n  res.aatStatus = AAT_STATUS_LIST[seed % AAT_STATUS_LIST.length];\n  return assert.returnType((res), Offering);\n}\nObject.defineProperty(generateOffering, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nexport function generateCompany(seed) {\n  assert.argumentTypes(seed, int);\n  var res = new Company();\n  res.name = generateName(seed);\n  return assert.returnType((res), Company);\n}\nObject.defineProperty(generateCompany, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nexport function generateOpportunity(seed) {\n  assert.argumentTypes(seed, int);\n  var res = new Opportunity();\n  res.name = generateName(seed);\n  return assert.returnType((res), Opportunity);\n}\nObject.defineProperty(generateOpportunity, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nexport function generateAccount(seed) {\n  assert.argumentTypes(seed, int);\n  var res = new Account();\n  res.accountId = seed;\n  return assert.returnType((res), Account);\n}\nObject.defineProperty(generateAccount, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nvar names = ['Foo', 'Bar', 'Baz', 'Qux', 'Quux', 'Garply', 'Waldo', 'Fred', 'Plugh', 'Xyzzy', 'Thud', 'Cruft', 'Stuff'];\nfunction generateName(seed) {\n  assert.argumentTypes(seed, int);\n  return assert.returnType((names[seed % names.length]), assert.type.string);\n}\nObject.defineProperty(generateName, \"parameters\", {get: function() {\n    return [[int]];\n  }});\nvar offsets = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nfunction randomDate(seed, minDate = null) {\n  assert.argumentTypes(seed, int, minDate, CustomDate);\n  if (minDate == null) {\n    minDate = CustomDate.now();\n  }\n  return assert.returnType((minDate.addDays(offsets[seed % offsets.length])), CustomDate);\n}\nObject.defineProperty(randomDate, \"parameters\", {get: function() {\n    return [[int], [CustomDate]];\n  }});\nvar stringLengths = [5, 7, 9, 11, 13];\nvar charCodeOffsets = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nfunction randomString(seed) {\n  assert.argumentTypes(seed, int);\n  var len = stringLengths[seed % 5];\n  var str = '';\n  for (var i = 0; i < len; i++) {\n    str += StringWrapper.fromCharCode(97 + charCodeOffsets[seed % 9] + i);\n  }\n  return assert.returnType((str), assert.type.string);\n}\nObject.defineProperty(randomString, \"parameters\", {get: function() {\n    return [[int]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchmarks/src/naive_infinite_scroll/random_data.map\n\n//# sourceMappingURL=./random_data.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}