{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/measure_values.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yDAAoB,UAAS,SAAQ;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,WAAoB,KAAG,KAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;oBGFY,CAAA,SAAQ,AAAC,mBCAjC,SAAQ,AAAC,CAAE;AACD,AAAI,UAAA,gBCCP,SAAM,cAAY,CACX,QAAO,CAAG,CAAA,SAAQ,CAAG,CAAA,MAAK,CAAG;AACvC,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,UAAQ,CAAG,KAAG,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AAC5F,aAAG,UAAU,EAAI,UAAQ,CAAC;AAC1B,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,OAAO,EAAI,OAAK,CAAC;QDN0B,ACOhD,CDPiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,uBACkB,CAAC;MACzD,AAAC,EAAC,EDJ4D;AEUtE,WAAK,eAAe,AAAC,CAAC,aAAY,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAChE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,IAAG,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;ILV0B;EAC3B,CAAA;ADDI,CAAC,CAAC;AMc8B","file":"benchpress/src/measure_values.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {assert} from \"rtts_assert/rtts_assert\";\nimport {Date} from 'angular2/src/facade/lang';\nexport class MeasureValues {\n  constructor(runIndex, timeStamp, values) {\n    assert.argumentTypes(runIndex, assert.type.number, timeStamp, Date, values, assert.type.any);\n    this.timeStamp = timeStamp;\n    this.runIndex = runIndex;\n    this.values = values;\n  }\n}\nObject.defineProperty(MeasureValues, \"parameters\", {get: function() {\n    return [[assert.type.number], [Date], [assert.type.any]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/measure_values.map\n\n//# sourceMappingURL=./measure_values.map"]}