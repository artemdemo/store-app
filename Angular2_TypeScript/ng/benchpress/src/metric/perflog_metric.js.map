{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","benchpress/src/metric/perflog_metric.js","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"benchpress/src/metric/perflog_metric.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {isPresent,\n  isBlank,\n  int,\n  BaseException,\n  StringWrapper} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {WebDriverExtension} from '../web_driver_extension';\nimport {Metric} from '../metric';\nexport class PerflogMetric extends Metric {\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  static get SET_TIMEOUT() {\n    return _SET_TIMEOUT;\n  }\n  constructor(driverExtension, setTimeout) {\n    assert.argumentTypes(driverExtension, WebDriverExtension, setTimeout, Function);\n    super();\n    this._driverExtension = driverExtension;\n    this._remainingEvents = [];\n    this._measureCount = 0;\n    this._setTimeout = setTimeout;\n  }\n  describe() {\n    return {\n      'script': 'script execution time in ms',\n      'render': 'render time in ms',\n      'gcTime': 'gc time in ms',\n      'gcAmount': 'gc amount in bytes',\n      'gcTimeInScript': 'gc time during script execution in ms',\n      'gcAmountInScript': 'gc amount during script execution in bytes'\n    };\n  }\n  beginMeasure() {\n    return assert.returnType((this._driverExtension.timeBegin(this._markName(this._measureCount++))), Promise);\n  }\n  endMeasure(restart) {\n    var markName = this._markName(this._measureCount - 1);\n    var nextMarkName = restart ? this._markName(this._measureCount++) : null;\n    return assert.returnType((this._driverExtension.timeEnd(markName, nextMarkName).then((_) => this._readUntilEndMark(markName))), assert.genericType(Promise, Object));\n  }\n  _readUntilEndMark(markName, loopCount = 0) {\n    return this._driverExtension.readPerfLog().then((events) => {\n      this._remainingEvents = ListWrapper.concat(this._remainingEvents, events);\n      if (loopCount > _MAX_RETRY_COUNT) {\n        throw new BaseException(`Tried too often to get the ending mark: ${loopCount}`);\n      }\n      var result = this._aggregateEvents(this._remainingEvents, markName);\n      if (isPresent(result)) {\n        this._remainingEvents = events;\n        return result;\n      }\n      var completer = PromiseWrapper.completer();\n      this._setTimeout(() => completer.complete(this._readUntilEndMark(markName, loopCount + 1)), 100);\n      return completer.promise;\n    });\n  }\n  _aggregateEvents(events, markName) {\n    var result = {\n      'script': 0,\n      'render': 0,\n      'gcTime': 0,\n      'gcAmount': 0,\n      'gcTimeInScript': 0,\n      'gcAmountInScript': 0\n    };\n    var startMarkFound = false;\n    var endMarkFound = false;\n    if (isBlank(markName)) {\n      startMarkFound = true;\n      endMarkFound = true;\n    }\n    var intervalStarts = {};\n    events.forEach((event) => {\n      var ph = event['ph'];\n      var name = event['name'];\n      var ts = event['ts'];\n      var args = event['args'];\n      if (StringWrapper.equals(ph, 'b') && StringWrapper.equals(name, markName)) {\n        startMarkFound = true;\n      } else if (StringWrapper.equals(ph, 'e') && StringWrapper.equals(name, markName)) {\n        endMarkFound = true;\n      }\n      if (startMarkFound && !endMarkFound) {\n        if (StringWrapper.equals(ph, 'B')) {\n          intervalStarts[name] = ts;\n        } else if (StringWrapper.equals(ph, 'E') && isPresent(intervalStarts[name])) {\n          var diff = ts - intervalStarts[name];\n          intervalStarts[name] = null;\n          if (StringWrapper.equals(name, 'gc')) {\n            result['gcTime'] += diff;\n            var gcAmount = 0;\n            if (isPresent(args)) {\n              gcAmount = args['amount'];\n            }\n            result['gcAmount'] += gcAmount;\n            if (isPresent(intervalStarts['script'])) {\n              result['gcTimeInScript'] += diff;\n              result['gcAmountInScript'] += gcAmount;\n            }\n          } else {\n            result[name] += diff;\n          }\n        }\n      }\n    });\n    result['script'] -= result['gcTimeInScript'];\n    return startMarkFound && endMarkFound ? result : null;\n  }\n  _markName(index) {\n    return `${_MARK_NAME_PREFIX}${index}`;\n  }\n}\nObject.defineProperty(PerflogMetric, \"parameters\", {get: function() {\n    return [[WebDriverExtension], [Function]];\n  }});\nObject.defineProperty(PerflogMetric.prototype.endMeasure, \"parameters\", {get: function() {\n    return [[assert.type.boolean]];\n  }});\nObject.defineProperty(PerflogMetric.prototype._readUntilEndMark, \"parameters\", {get: function() {\n    return [[assert.type.string], [int]];\n  }});\nvar _MAX_RETRY_COUNT = 20;\nvar _MARK_NAME_PREFIX = 'benchpress';\nvar _SET_TIMEOUT = new OpaqueToken('PerflogMetric.setTimeout');\nvar _BINDINGS = [bind(Metric).toFactory((driverExtension, setTimeout) => new PerflogMetric(driverExtension, setTimeout), [WebDriverExtension, _SET_TIMEOUT]), bind(_SET_TIMEOUT).toValue((fn, millis) => PromiseWrapper.setTimeout(fn, millis))];\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/metric/perflog_metric.map\n\n//# sourceMappingURL=./perflog_metric.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}