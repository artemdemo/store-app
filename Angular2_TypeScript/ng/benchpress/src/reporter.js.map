{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/reporter.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,0GAAoB,UAAS,SAAQ;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;eGFY,CAAA,SAAQ,AAAC,cCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,WCKP,SAAM,SAAO,KDL8B,ACclD,CDdmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ACK5C,4BAAkB,CAAlB,UAAoB,MAAK,CAAG;AAC1B,iBAAK,cAAc,AAAC,CAAC,MAAK,CAAG,cAAY,CAAC,CAAC;AAC3C,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AACA,qBAAW,CAAX,UAAa,cAAa,CAAG,CAAA,WAAU,CAAG;AACxC,iBAAK,cAAc,AAAC,CAAC,cAAa,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAG,YAAU,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC;AACnI,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AAAA,aDX8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AEgBtE,WAAK,eAAe,AAAC,CAAC,QAAO,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC5D,eAAO,EAAC,GAAI,SAAO,AAAC,EAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,oBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACzF,eAAO,EAAC,CAAC,aAAY,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAClF,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAG,EAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;ILtB0B;EAC3B,CAAA;ADDI,CAAC,CAAC;AM0BwB","file":"benchpress/src/reporter.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {assert} from \"rtts_assert/rtts_assert\";\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {ABSTRACT,\n  BaseException} from 'angular2/src/facade/lang';\nimport {MeasureValues} from './measure_values';\nexport class Reporter {\n  reportMeasureValues(values) {\n    assert.argumentTypes(values, MeasureValues);\n    throw new BaseException('NYI');\n  }\n  reportSample(completeSample, validSample) {\n    assert.argumentTypes(completeSample, assert.genericType(List, MeasureValues), validSample, assert.genericType(List, MeasureValues));\n    throw new BaseException('NYI');\n  }\n}\nObject.defineProperty(Reporter, \"annotations\", {get: function() {\n    return [new ABSTRACT()];\n  }});\nObject.defineProperty(Reporter.prototype.reportMeasureValues, \"parameters\", {get: function() {\n    return [[MeasureValues]];\n  }});\nObject.defineProperty(Reporter.prototype.reportSample, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)], [assert.genericType(List, MeasureValues)]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/reporter.map\n\n//# sourceMappingURL=./reporter.map"]}