{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/sample_description.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,+GAAoB,UAAS,SAAQ;;;;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,cAAoB,KAAG,QAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,cAAoB,KAAG,QAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;wBGFY,CAAA,SAAQ,AAAC,uBCAjC,SAAQ,AAAC,CAAE;AACD,AAAI,UAAA,oBCOP,SAAM,kBAAgB,CAIf,EAAC,CAAG,CAAA,YAAW,CAAG,CAAA,OAAM;;AAClC,aAAG,GAAG,EAAI,GAAC,CAAC;AACZ,aAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,aAAG,YAAY,EAAI,GAAC,CAAC;AACrB,oBAAU,QAAQ,AAAC,CAAC,YAAW,GAAG,SAAC,WAAU;AAC3C,2BAAe,QAAQ,AAAC,CAAC,WAAU,GAAG,SAAC,KAAI,CAAG,CAAA,IAAG;mBAAM,CAAA,gBAAe,CAAE,IAAG,CAAC,EAAI,MAAI;YAAA,EAAC,CAAC;UACxF,EAAC,CAAC;QDjB4C,ACmBlD,CDnBmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,yBCO5C,GAAW,SAAO,EAAI;AACpB,iBAAO,UAAQ,CAAC;UAClB,EDR8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;gBEqBtD,EAAC,IAAG,AAAC,CAAC,iBAAgB,CAAC,UAAU,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,EAAC,CAAG,CAAA,OAAM,CAAG,CAAA,SAAQ,CAAG,CAAA,WAAU,CAAG,CAAA,QAAO;aAAM,IAAI,kBAAgB,AAAC,CAAC,EAAC,CAAG,EAAC,CAAC,SAAQ,CAAG,QAAM,CAAC,CAAG,CAAA,SAAQ,SAAS,AAAC,EAAC,CAAG,YAAU,CAAG,SAAO,CAAC,CAAG,CAAA,MAAK,SAAS,AAAC,EAAC,CAAC;MAAA,EAAG,EAAC,MAAK,CAAG,CAAA,OAAM,UAAU,CAAG,CAAA,OAAM,SAAS,CAAG,UAAQ,CAAG,CAAA,OAAM,oBAAoB,CAAG,CAAA,OAAM,mBAAmB,CAAC,CAAC,CAAG,CAAA,IAAG,AAAC,CAAC,OAAM,oBAAoB,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAG,CAAA,IAAG,AAAC,CAAC,OAAM,mBAAmB,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;ILnBjZ;EAC3B,CAAA;ADDI,CAAC,CAAC;AMuBkC","file":"benchpress/src/sample_description.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {StringMapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {Sampler} from './sampler';\nimport {Validator} from './validator';\nimport {Metric} from './metric';\nimport {Options} from './sample_options';\nexport class SampleDescription {\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  constructor(id, descriptions, metrics) {\n    this.id = id;\n    this.metrics = metrics;\n    this.description = {};\n    ListWrapper.forEach(descriptions, (description) => {\n      StringMapWrapper.forEach(description, (value, prop) => this.description[prop] = value);\n    });\n  }\n}\nvar _BINDINGS = [bind(SampleDescription).toFactory((metric, id, forceGc, validator, defaultDesc, userDesc) => new SampleDescription(id, [{'forceGc': forceGc}, validator.describe(), defaultDesc, userDesc], metric.describe()), [Metric, Options.SAMPLE_ID, Options.FORCE_GC, Validator, Options.DEFAULT_DESCRIPTION, Options.SAMPLE_DESCRIPTION]), bind(Options.DEFAULT_DESCRIPTION).toValue({}), bind(Options.SAMPLE_DESCRIPTION).toValue({})];\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/sample_description.map\n\n//# sourceMappingURL=./sample_description.map"]}