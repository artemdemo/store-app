{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/sampler.js"],"names":[],"mappings":"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","file":"benchpress/src/sampler.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  isBlank,\n  Date,\n  DateWrapper} from 'angular2/src/facade/lang';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {StringMapWrapper,\n  List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {Metric} from './metric';\nimport {Validator} from './validator';\nimport {Reporter} from './reporter';\nimport {WebDriverExtension} from './web_driver_extension';\nimport {WebDriverAdapter} from './web_driver_adapter';\nimport {Options} from './sample_options';\nimport {MeasureValues} from './measure_values';\nexport class Sampler {\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  static get TIME() {\n    return _TIME;\n  }\n  constructor({driver,\n    driverExtension,\n    metric,\n    reporter,\n    validator,\n    forceGc,\n    prepare,\n    execute,\n    time} = {}) {\n    this._driver = driver;\n    this._driverExtension = driverExtension;\n    this._metric = metric;\n    this._reporter = reporter;\n    this._validator = validator;\n    this._forceGc = forceGc;\n    this._prepare = prepare;\n    this._execute = execute;\n    this._time = time;\n  }\n  sample() {\n    var loop;\n    loop = (lastState) => {\n      return this._iterate(lastState).then((newState) => {\n        if (isPresent(newState.validSample)) {\n          return newState;\n        } else {\n          return loop(newState);\n        }\n      });\n    };\n    return assert.returnType((this._gcIfNeeded().then((_) => loop(new SampleState([], null)))), assert.genericType(Promise, SampleState));\n  }\n  _gcIfNeeded() {\n    if (this._forceGc) {\n      return this._driverExtension.gc();\n    } else {\n      return PromiseWrapper.resolve(null);\n    }\n  }\n  _iterate(lastState) {\n    var resultPromise;\n    if (isPresent(this._prepare)) {\n      resultPromise = this._driver.waitFor(this._prepare).then((_) => this._gcIfNeeded());\n    } else {\n      resultPromise = PromiseWrapper.resolve(null);\n    }\n    if (isPresent(this._prepare) || lastState.completeSample.length === 0) {\n      resultPromise = resultPromise.then((_) => this._metric.beginMeasure());\n    }\n    return resultPromise.then((_) => this._driver.waitFor(this._execute)).then((_) => this._gcIfNeeded()).then((_) => this._metric.endMeasure(isBlank(this._prepare))).then((measureValues) => this._report(lastState, measureValues));\n  }\n  _report(state, metricValues) {\n    var measureValues = new MeasureValues(state.completeSample.length, this._time(), metricValues);\n    var completeSample = ListWrapper.concat(state.completeSample, [measureValues]);\n    var validSample = this._validator.validate(completeSample);\n    var resultPromise = this._reporter.reportMeasureValues(measureValues);\n    if (isPresent(validSample)) {\n      resultPromise = resultPromise.then((_) => this._reporter.reportSample(completeSample, validSample));\n    }\n    return assert.returnType((resultPromise.then((_) => new SampleState(completeSample, validSample))), assert.genericType(Promise, SampleState));\n  }\n}\nObject.defineProperty(Sampler.prototype._report, \"parameters\", {get: function() {\n    return [[SampleState], [assert.type.any]];\n  }});\nexport class SampleState {\n  constructor(completeSample, validSample) {\n    assert.argumentTypes(completeSample, List, validSample, List);\n    this.completeSample = completeSample;\n    this.validSample = validSample;\n  }\n}\nObject.defineProperty(SampleState, \"parameters\", {get: function() {\n    return [[List], [List]];\n  }});\nvar _TIME = new OpaqueToken('Sampler.time');\nvar _BINDINGS = [bind(Sampler).toFactory((driver, driverExtension, metric, reporter, validator, forceGc, prepare, execute, time) => new Sampler({\n  driver: driver,\n  driverExtension: driverExtension,\n  reporter: reporter,\n  validator: validator,\n  metric: metric,\n  forceGc: forceGc,\n  prepare: prepare !== false ? prepare : null,\n  execute: execute,\n  time: time\n}), [WebDriverAdapter, WebDriverExtension, Metric, Reporter, Validator, Options.FORCE_GC, Options.PREPARE, Options.EXECUTE, _TIME]), bind(Options.FORCE_GC).toValue(false), bind(Options.PREPARE).toValue(false), bind(_TIME).toValue(() => DateWrapper.now())];\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/sampler.map\n\n//# sourceMappingURL=./sampler.map"]}