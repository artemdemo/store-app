{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/statistic.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,gEAAoB,UAAS,SAAQ;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,WAAoB,KAAG,KAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;gBGFY,CAAA,SAAQ,AAAC,eCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,YCCP,SAAM,UAAQ,KDD6B,AC8BlD,CD9BmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ACCrC,wCAA8B,CAArC,UAAuC,MAAK,CAAG,CAAA,IAAG,CAAG;AACnD,iBAAO,CAAA,SAAQ,2BAA2B,AAAC,CAAC,MAAK,CAAG,KAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAAI,IAAE,CAAC;UACxE;AACO,sBAAY,CAAnB,UAAqB,MAAK;AACxB,AAAI,cAAA,CAAA,KAAI,EAAI,EAAA,CAAC;AACb,sBAAU,QAAQ,AAAC,CAAC,MAAK,GAAG,SAAC,CAAA,CAAM;AACjC,kBAAI,GAAK,EAAA,CAAC;YACZ,EAAC,CAAC;AACF,iBAAO,CAAA,KAAI,EAAI,CAAA,MAAK,OAAO,CAAC;UAC9B;AACO,mCAAyB,CAAhC,UAAkC,MAAK,CAAG,CAAA,IAAG;AAC3C,AAAI,cAAA,CAAA,SAAQ,EAAI,EAAA,CAAC;AACjB,sBAAU,QAAQ,AAAC,CAAC,MAAK,GAAG,SAAC,CAAA,CAAM;AACjC,sBAAQ,GAAK,CAAA,IAAG,IAAI,AAAC,CAAC,CAAA,EAAI,KAAG,CAAG,EAAA,CAAC,CAAC;YACpC,EAAC,CAAC;AACF,oBAAQ,EAAI,CAAA,SAAQ,EAAI,EAAC,MAAK,OAAO,CAAC,CAAC;AACvC,oBAAQ,EAAI,CAAA,IAAG,KAAK,AAAC,CAAC,SAAQ,CAAC,CAAC;AAChC,iBAAO,UAAQ,CAAC;UAClB;AACO,iCAAuB,CAA9B,UAAgC,OAAM,CAAG,CAAA,KAAI,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAG;AAC9D,AAAI,cAAA,CAAA,WAAU,EAAI,EAAA,CAAC;AACnB,AAAI,cAAA,CAAA,UAAS,EAAI,EAAA,CAAC;AAClB,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,OAAM,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACvC,wBAAU,GAAK,CAAA,CAAC,OAAM,CAAE,CAAA,CAAC,EAAI,MAAI,CAAC,EAAI,EAAC,OAAM,CAAE,CAAA,CAAC,EAAI,MAAI,CAAC,CAAC;AAC1D,uBAAS,GAAK,CAAA,IAAG,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,EAAI,MAAI,CAAG,EAAA,CAAC,CAAC;YAC/C;AAAA,AACA,iBAAO,CAAA,WAAU,EAAI,WAAS,CAAC;UACjC;AAAA,SD3B8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;IHEvC;EAC3B,CAAA;ADDI,CAAC,CAAC;AMiCyB","file":"benchpress/src/statistic.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Math} from 'angular2/src/facade/math';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nexport class Statistic {\n  static calculateCoefficientOfVariation(sample, mean) {\n    return Statistic.calculateStandardDeviation(sample, mean) / mean * 100;\n  }\n  static calculateMean(sample) {\n    var total = 0;\n    ListWrapper.forEach(sample, (x) => {\n      total += x;\n    });\n    return total / sample.length;\n  }\n  static calculateStandardDeviation(sample, mean) {\n    var deviation = 0;\n    ListWrapper.forEach(sample, (x) => {\n      deviation += Math.pow(x - mean, 2);\n    });\n    deviation = deviation / (sample.length);\n    deviation = Math.sqrt(deviation);\n    return deviation;\n  }\n  static calculateRegressionSlope(xValues, xMean, yValues, yMean) {\n    var dividendSum = 0;\n    var divisorSum = 0;\n    for (var i = 0; i < xValues.length; i++) {\n      dividendSum += (xValues[i] - xMean) * (yValues[i] - yMean);\n      divisorSum += Math.pow(xValues[i] - xMean, 2);\n    }\n    return dividendSum / divisorSum;\n  }\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/statistic.map\n\n//# sourceMappingURL=./statistic.map"]}