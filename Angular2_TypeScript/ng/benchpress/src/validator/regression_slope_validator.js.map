{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","benchpress/src/validator/regression_slope_validator.js","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"benchpress/src/validator/regression_slope_validator.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {Validator} from '../validator';\nimport {Statistic} from '../statistic';\nimport {MeasureValues} from '../measure_values';\nexport class RegressionSlopeValidator extends Validator {\n  static get SAMPLE_SIZE() {\n    return _SAMPLE_SIZE;\n  }\n  static get METRIC() {\n    return _METRIC;\n  }\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  constructor(sampleSize, metric) {\n    super();\n    this._sampleSize = sampleSize;\n    this._metric = metric;\n  }\n  describe() {\n    return assert.returnType(({\n      'sampleSize': this._sampleSize,\n      'regressionSlopeMetric': this._metric\n    }), assert.type.any);\n  }\n  validate(completeSample) {\n    assert.argumentTypes(completeSample, assert.genericType(List, MeasureValues));\n    if (completeSample.length >= this._sampleSize) {\n      var latestSample = ListWrapper.slice(completeSample, completeSample.length - this._sampleSize, completeSample.length);\n      var xValues = [];\n      var yValues = [];\n      for (var i = 0; i < latestSample.length; i++) {\n        ListWrapper.push(xValues, i);\n        ListWrapper.push(yValues, latestSample[i].values[this._metric]);\n      }\n      var regressionSlope = Statistic.calculateRegressionSlope(xValues, Statistic.calculateMean(xValues), yValues, Statistic.calculateMean(yValues));\n      return assert.returnType((regressionSlope >= 0 ? latestSample : null), assert.genericType(List, MeasureValues));\n    } else {\n      return assert.returnType((null), assert.genericType(List, MeasureValues));\n    }\n  }\n}\nObject.defineProperty(RegressionSlopeValidator.prototype.validate, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)]];\n  }});\nvar _SAMPLE_SIZE = new OpaqueToken('RegressionSlopeValidator.sampleSize');\nvar _METRIC = new OpaqueToken('RegressionSlopeValidator.metric');\nvar _BINDINGS = [bind(Validator).toFactory((sampleSize, metric) => new RegressionSlopeValidator(sampleSize, metric), [_SAMPLE_SIZE, _METRIC]), bind(_SAMPLE_SIZE).toValue(10), bind(_METRIC).toValue('script')];\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/src/validator/regression_slope_validator.map\n\n//# sourceMappingURL=./regression_slope_validator.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}