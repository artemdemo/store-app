{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/metric/multi_metric_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,+GAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;ACiB7C,SAAS,KAAG,CAAC,AAAC;AACnB,WAAS,aAAW,CAAE,GAAE;AACtB,WAAO,CAAA,GAAI,SAAO,AAAC,CAAC,CAAC,WAAU,IAAI,AAAC,CAAC,GAAE,GAAG,SAAC,EAAC;aAAM,CAAA,IAAG,AAAC,CAAC,EAAC,CAAC,QAAQ,AAAC,CAAC,GAAI,WAAS,AAAC,CAAC,EAAC,CAAC,CAAC;MAAA,EAAC,CAAG,CAAA,WAAU,eAAe,AAAC,CAAC,GAAE,CAAC,CAAC,CAAC,SAAS,AAAC,CAAC,WAAU,CAAC,CAAC;IAClJ;AACA,WAAO,AAAC,CAAC,cAAa,GAAG,SAAA,AAAC;AACxB,OAAC,AAAC,CAAC,2BAA0B,GAAG,SAAC,IAAG;AAClC,mBAAW,AAAC,CAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC,KAAK,AAAC,EAAC,SAAC,CAAA,CAAM;AACrC,eAAK,AAAC,CAAC,CAAA,SAAS,AAAC,EAAC,CAAC,QAAQ,AAAC,CAAC;AAC3B,eAAG,CAAG,WAAS;AACf,eAAG,CAAG,WAAS;AAAA,UACjB,CAAC,CAAC;AACF,aAAG,AAAC,EAAC,CAAC;QACR,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,qCAAoC,GAAG,SAAC,IAAG;AAC5C,mBAAW,AAAC,CAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC,KAAK,AAAC,EAAC,SAAC,CAAA;eAAM,CAAA,CAAA,aAAa,AAAC,EAAC;QAAA,EAAC,KAAK,AAAC,EAAC,SAAC,MAAK,CAAM;AACxE,eAAK,AAAC,CAAC,MAAK,CAAC,QAAQ,AAAC,CAAC,CAAC,iBAAgB,CAAG,kBAAgB,CAAC,CAAC,CAAC;AAC9D,aAAG,AAAC,EAAC,CAAC;QACR,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,MAAC,KAAI,CAAG,KAAG,CAAC,QAAQ,AAAC,EAAC,SAAC,WAAU;AAC/B,SAAC,AAAC,EAAC,gDAAgD,EAAC,YAAU,IAAK,SAAC,IAAG;AACrE,qBAAW,AAAC,CAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC,KAAK,AAAC,EAAC,SAAC,CAAA;iBAAM,CAAA,CAAA,WAAW,AAAC,CAAC,WAAU,CAAC;UAAA,EAAC,KAAK,AAAC,EAAC,SAAC,MAAK,CAAM;AACjF,iBAAK,AAAC,CAAC,MAAK,CAAC,QAAQ,AAAC,CAAC;AACrB,iBAAG,CAAG,EAAC,SAAQ,CAAG,YAAU,CAAC;AAC7B,iBAAG,CAAG,EAAC,SAAQ,CAAG,YAAU,CAAC;AAAA,YAC/B,CAAC,CAAC;AACF,eAAG,AAAC,EAAC,CAAC;UACR,EAAC,CAAC;QACJ,EAAC,CAAC;MACJ,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AChDQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,qBAAoB,KAAG,eAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,aAAoB,KAAG,OAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,WAAoB,KAAG,KAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;AGFZ,mBCAA,SAAS,QAAO;AACN,AAAI,UAAA,aNiDd,SAAM,WAAS,CACD,EAAC,CAAG;AOnDlB,APoDI,wBOpDU,iBAAiB,AAAC,YAAkB,KAAK,MAAmB,CPoD/D;AACP,aAAG,IAAI,EAAI,GAAC,CAAC;QMpDiC,ANqDhD,CMrDiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ANqD5C,qBAAW,CAAX,UAAY,AAAC,CAAE;AACb,iBAAO,CAAA,cAAa,QAAQ,AAAC,EAAI,IAAG,IAAI,EAAC,gBAAc,EAAC,CAAC;UAC3D;AACA,mBAAS,CAAT,UAAW,OAAM,CAAG;AAClB,AAAI,cAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,iBAAK,CAAE,IAAG,IAAI,CAAC,EAAI,EAAC,SAAQ,CAAG,QAAM,CAAC,CAAC;AACvC,iBAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;UACvC;AACA,iBAAO,CAAP,UAAQ,AAAC,CAAE;AACT,AAAI,cAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,iBAAK,CAAE,IAAG,IAAI,CAAC,EAAI,WAAS,CAAC;AAC7B,iBAAO,OAAK,CAAC;UACf;AAAA,aMhEgE,SAAO,CAAC,CAAC;MACnE,AAAC,CN8CgB,MAAK,CM9CH,CDJS,CAAA;ALqEpC,WAAK,eAAe,AAAC,CAAC,UAAS,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAClF,eAAO,EAAC,CAAC,MAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IErE0B;EAC3B,CAAA;AHDI,CAAC,CAAC;ACyEiC","file":"benchpress/test/metric/multi_metric_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach} from 'angular2/test_lib';\nimport {List,\n  ListWrapper,\n  StringMap} from 'angular2/src/facade/collection';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {Metric,\n  MultiMetric,\n  bind,\n  Injector} from 'benchpress/benchpress';\nexport function main() {\n  function createMetric(ids) {\n    return new Injector([ListWrapper.map(ids, (id) => bind(id).toValue(new MockMetric(id))), MultiMetric.createBindings(ids)]).asyncGet(MultiMetric);\n  }\n  describe('multi metric', () => {\n    it('should merge descriptions', (done) => {\n      createMetric(['m1', 'm2']).then((m) => {\n        expect(m.describe()).toEqual({\n          'm1': 'describe',\n          'm2': 'describe'\n        });\n        done();\n      });\n    });\n    it('should merge all beginMeasure calls', (done) => {\n      createMetric(['m1', 'm2']).then((m) => m.beginMeasure()).then((values) => {\n        expect(values).toEqual(['m1_beginMeasure', 'm2_beginMeasure']);\n        done();\n      });\n    });\n    [false, true].forEach((restartFlag) => {\n      it(`should merge all endMeasure calls for restart=${restartFlag}`, (done) => {\n        createMetric(['m1', 'm2']).then((m) => m.endMeasure(restartFlag)).then((values) => {\n          expect(values).toEqual({\n            'm1': {'restart': restartFlag},\n            'm2': {'restart': restartFlag}\n          });\n          done();\n        });\n      });\n    });\n  });\n}\nclass MockMetric extends Metric {\n  constructor(id) {\n    super();\n    this._id = id;\n  }\n  beginMeasure() {\n    return PromiseWrapper.resolve(`${this._id}_beginMeasure`);\n  }\n  endMeasure(restart) {\n    var result = {};\n    result[this._id] = {'restart': restart};\n    return PromiseWrapper.resolve(result);\n  }\n  describe() {\n    var result = {};\n    result[this._id] = 'describe';\n    return result;\n  }\n}\nObject.defineProperty(MockMetric.prototype.endMeasure, \"parameters\", {get: function() {\n    return [[assert.type.boolean]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/test/metric/multi_metric_spec.map\n\n//# sourceMappingURL=./multi_metric_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}