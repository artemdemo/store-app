{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/reporter/multi_reporter_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"benchpress/test/reporter/multi_reporter_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach} from 'angular2/test_lib';\nimport {List,\n  ListWrapper,\n  StringMap} from 'angular2/src/facade/collection';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {DateWrapper} from 'angular2/src/facade/lang';\nimport {Reporter,\n  MultiReporter,\n  bind,\n  Injector,\n  MeasureValues} from 'benchpress/benchpress';\nexport function main() {\n  function createReporters(ids) {\n    return new Injector([ListWrapper.map(ids, (id) => bind(id).toValue(new MockReporter(id))), MultiReporter.createBindings(ids)]).asyncGet(MultiReporter);\n  }\n  describe('multi reporter', () => {\n    it('should reportMeasureValues to all', (done) => {\n      var mv = new MeasureValues(0, DateWrapper.now(), {});\n      createReporters(['m1', 'm2']).then((r) => r.reportMeasureValues(mv)).then((values) => {\n        expect(values).toEqual([{\n          'id': 'm1',\n          'values': mv\n        }, {\n          'id': 'm2',\n          'values': mv\n        }]);\n        done();\n      });\n    });\n    it('should reportSample to call', (done) => {\n      var completeSample = [new MeasureValues(0, DateWrapper.now(), {}), new MeasureValues(1, DateWrapper.now(), {})];\n      var validSample = [completeSample[1]];\n      createReporters(['m1', 'm2']).then((r) => r.reportSample(completeSample, validSample)).then((values) => {\n        expect(values).toEqual([{\n          'id': 'm1',\n          'completeSample': completeSample,\n          'validSample': validSample\n        }, {\n          'id': 'm2',\n          'completeSample': completeSample,\n          'validSample': validSample\n        }]);\n        done();\n      });\n    });\n  });\n}\nclass MockReporter extends Reporter {\n  constructor(id) {\n    super();\n    this._id = id;\n  }\n  reportMeasureValues(values) {\n    return PromiseWrapper.resolve({\n      'id': this._id,\n      'values': values\n    });\n  }\n  reportSample(completeSample, validSample) {\n    return PromiseWrapper.resolve({\n      'id': this._id,\n      'completeSample': completeSample,\n      'validSample': validSample\n    });\n  }\n}\nObject.defineProperty(MockReporter.prototype.reportMeasureValues, \"parameters\", {get: function() {\n    return [[MeasureValues]];\n  }});\nObject.defineProperty(MockReporter.prototype.reportSample, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)], [assert.genericType(List, MeasureValues)]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/test/reporter/multi_reporter_spec.map\n\n//# sourceMappingURL=./multi_reporter_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}