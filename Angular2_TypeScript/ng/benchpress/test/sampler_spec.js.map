{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/sampler_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"benchpress/test/sampler_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach} from 'angular2/test_lib';\nimport {isBlank,\n  isPresent,\n  BaseException,\n  stringify,\n  Date,\n  DateWrapper} from 'angular2/src/facade/lang';\nimport {ListWrapper,\n  List} from 'angular2/src/facade/collection';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {Sampler,\n  WebDriverAdapter,\n  WebDriverExtension,\n  Validator,\n  Metric,\n  Reporter,\n  Browser,\n  bind,\n  Injector,\n  Options,\n  MeasureValues} from 'benchpress/benchpress';\nexport function main() {\n  var EMPTY_EXECUTE = () => {};\n  describe('sampler', () => {\n    var sampler;\n    function createSampler({driver,\n      driverExtension,\n      metric,\n      reporter,\n      validator,\n      forceGc,\n      prepare,\n      execute} = {}) {\n      var time = 1000;\n      if (isBlank(metric)) {\n        metric = new MockMetric([]);\n      }\n      if (isBlank(reporter)) {\n        reporter = new MockReporter([]);\n      }\n      if (isBlank(driver)) {\n        driver = new MockDriverAdapter([]);\n      }\n      if (isBlank(driverExtension)) {\n        driverExtension = new MockDriverExtension([]);\n      }\n      var bindings = ListWrapper.concat(Sampler.BINDINGS, [bind(Metric).toValue(metric), bind(Reporter).toValue(reporter), bind(WebDriverAdapter).toValue(driver), bind(WebDriverExtension).toValue(driverExtension), bind(Options.EXECUTE).toValue(execute), bind(Validator).toValue(validator), bind(Sampler.TIME).toValue(() => DateWrapper.fromMillis(time++))]);\n      if (isPresent(prepare)) {\n        ListWrapper.push(bindings, bind(Options.PREPARE).toValue(prepare));\n      }\n      if (isPresent(forceGc)) {\n        ListWrapper.push(bindings, bind(Options.FORCE_GC).toValue(forceGc));\n      }\n      sampler = new Injector(bindings).get(Sampler);\n    }\n    it('should call the prepare and execute callbacks using WebDriverAdapter.waitFor', (done) => {\n      var log = [];\n      var count = 0;\n      var driver = new MockDriverAdapter([], (callback) => {\n        var result = callback();\n        ListWrapper.push(log, result);\n        return PromiseWrapper.resolve(result);\n      });\n      createSampler({\n        driver: driver,\n        validator: createCountingValidator(2),\n        prepare: () => {\n          return count++;\n        },\n        execute: () => {\n          return count++;\n        }\n      });\n      sampler.sample().then((_) => {\n        expect(count).toBe(4);\n        expect(log).toEqual([0, 1, 2, 3]);\n        done();\n      });\n    });\n    it('should call prepare, gc, beginMeasure, execute, gc, endMeasure for every iteration', (done) => {\n      var workCount = 0;\n      var log = [];\n      createSampler({\n        forceGc: true,\n        metric: createCountingMetric(log),\n        driverExtension: new MockDriverExtension(log),\n        validator: createCountingValidator(2),\n        prepare: () => {\n          ListWrapper.push(log, `p${workCount++}`);\n        },\n        execute: () => {\n          ListWrapper.push(log, `w${workCount++}`);\n        }\n      });\n      sampler.sample().then((_) => {\n        expect(log).toEqual([['gc'], 'p0', ['gc'], ['beginMeasure'], 'w1', ['gc'], ['endMeasure', false, {'script': 0}], 'p2', ['gc'], ['beginMeasure'], 'w3', ['gc'], ['endMeasure', false, {'script': 1}]]);\n        done();\n      });\n    });\n    it('should call execute, gc, endMeasure for every iteration if there is no prepare callback', (done) => {\n      var log = [];\n      var workCount = 0;\n      createSampler({\n        forceGc: true,\n        metric: createCountingMetric(log),\n        driverExtension: new MockDriverExtension(log),\n        validator: createCountingValidator(2),\n        execute: () => {\n          ListWrapper.push(log, `w${workCount++}`);\n        },\n        prepare: null\n      });\n      sampler.sample().then((_) => {\n        expect(log).toEqual([['gc'], ['beginMeasure'], 'w0', ['gc'], ['endMeasure', true, {'script': 0}], 'w1', ['gc'], ['endMeasure', true, {'script': 1}]]);\n        done();\n      });\n    });\n    it('should not gc if the flag is not set', (done) => {\n      var workCount = 0;\n      var log = [];\n      createSampler({\n        metric: createCountingMetric(),\n        driverExtension: new MockDriverExtension(log),\n        validator: createCountingValidator(2),\n        prepare: EMPTY_EXECUTE,\n        execute: EMPTY_EXECUTE\n      });\n      sampler.sample().then((_) => {\n        expect(log).toEqual([]);\n        done();\n      });\n    });\n    it('should only collect metrics for execute and ignore metrics from prepare', (done) => {\n      var scriptTime = 0;\n      var iterationCount = 1;\n      createSampler({\n        validator: createCountingValidator(2),\n        metric: new MockMetric([], () => {\n          var result = PromiseWrapper.resolve({'script': scriptTime});\n          scriptTime = 0;\n          return result;\n        }),\n        prepare: () => {\n          scriptTime = 1 * iterationCount;\n        },\n        execute: () => {\n          scriptTime = 10 * iterationCount;\n          iterationCount++;\n        }\n      });\n      sampler.sample().then((state) => {\n        expect(state.completeSample.length).toBe(2);\n        expect(state.completeSample[0]).toEqual(mv(0, 1000, {'script': 10}));\n        expect(state.completeSample[1]).toEqual(mv(1, 1001, {'script': 20}));\n        done();\n      });\n    });\n    it('should call the validator for every execution and store the valid sample', (done) => {\n      var log = [];\n      var validSample = [{}];\n      createSampler({\n        metric: createCountingMetric(),\n        validator: createCountingValidator(2, validSample, log),\n        execute: EMPTY_EXECUTE\n      });\n      sampler.sample().then((state) => {\n        expect(state.validSample).toBe(validSample);\n        expect(log.length).toBe(2);\n        expect(log[0]).toEqual(['validate', [mv(0, 1000, {'script': 0})], null]);\n        expect(log[1]).toEqual(['validate', [mv(0, 1000, {'script': 0}), mv(1, 1001, {'script': 1})], validSample]);\n        done();\n      });\n    });\n    it('should report the metric values', (done) => {\n      var log = [];\n      var validSample = [{}];\n      createSampler({\n        validator: createCountingValidator(2, validSample),\n        metric: createCountingMetric(),\n        reporter: new MockReporter(log),\n        execute: EMPTY_EXECUTE\n      });\n      sampler.sample().then((_) => {\n        expect(log.length).toBe(3);\n        expect(log[0]).toEqual(['reportMeasureValues', mv(0, 1000, {'script': 0})]);\n        expect(log[1]).toEqual(['reportMeasureValues', mv(1, 1001, {'script': 1})]);\n        expect(log[2]).toEqual(['reportSample', [mv(0, 1000, {'script': 0}), mv(1, 1001, {'script': 1})], validSample]);\n        done();\n      });\n    });\n  });\n}\nfunction mv(runIndex, time, values) {\n  return new MeasureValues(runIndex, DateWrapper.fromMillis(time), values);\n}\nfunction createCountingValidator(count, validSample = null, log = null) {\n  return new MockValidator(log, (completeSample) => {\n    count--;\n    if (count === 0) {\n      return isPresent(validSample) ? validSample : completeSample;\n    } else {\n      return null;\n    }\n  });\n}\nfunction createCountingMetric(log = null) {\n  var scriptTime = 0;\n  return new MockMetric(log, () => {\n    return {'script': scriptTime++};\n  });\n}\nclass MockDriverAdapter extends WebDriverAdapter {\n  constructor(log = null, waitFor = null) {\n    super();\n    if (isBlank(log)) {\n      log = [];\n    }\n    this._log = log;\n    this._waitFor = waitFor;\n  }\n  waitFor(callback) {\n    assert.argumentTypes(callback, Function);\n    if (isPresent(this._waitFor)) {\n      return assert.returnType((this._waitFor(callback)), Promise);\n    } else {\n      return assert.returnType((PromiseWrapper.resolve(callback())), Promise);\n    }\n  }\n}\nObject.defineProperty(MockDriverAdapter.prototype.waitFor, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nclass MockDriverExtension extends WebDriverExtension {\n  constructor(log = null) {\n    super();\n    if (isBlank(log)) {\n      log = [];\n    }\n    this._log = log;\n  }\n  gc() {\n    ListWrapper.push(this._log, ['gc']);\n    return assert.returnType((PromiseWrapper.resolve(null)), Promise);\n  }\n}\nclass MockValidator extends Validator {\n  constructor(log = null, validate = null) {\n    super();\n    this._validate = validate;\n    if (isBlank(log)) {\n      log = [];\n    }\n    this._log = log;\n  }\n  validate(completeSample) {\n    assert.argumentTypes(completeSample, assert.genericType(List, MeasureValues));\n    var stableSample = isPresent(this._validate) ? this._validate(completeSample) : completeSample;\n    ListWrapper.push(this._log, ['validate', completeSample, stableSample]);\n    return assert.returnType((stableSample), assert.genericType(List, MeasureValues));\n  }\n}\nObject.defineProperty(MockValidator.prototype.validate, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)]];\n  }});\nclass MockMetric extends Metric {\n  constructor(log = null, endMeasure = null) {\n    super();\n    this._endMeasure = endMeasure;\n    if (isBlank(log)) {\n      log = [];\n    }\n    this._log = log;\n  }\n  beginMeasure() {\n    ListWrapper.push(this._log, ['beginMeasure']);\n    return PromiseWrapper.resolve(null);\n  }\n  endMeasure(restart) {\n    var measureValues = isPresent(this._endMeasure) ? this._endMeasure() : {};\n    ListWrapper.push(this._log, ['endMeasure', restart, measureValues]);\n    return PromiseWrapper.resolve(measureValues);\n  }\n}\nclass MockReporter extends Reporter {\n  constructor(log = null) {\n    super();\n    if (isBlank(log)) {\n      log = [];\n    }\n    this._log = log;\n  }\n  reportMeasureValues(values) {\n    ListWrapper.push(this._log, ['reportMeasureValues', values]);\n    return assert.returnType((PromiseWrapper.resolve(null)), Promise);\n  }\n  reportSample(completeSample, validSample) {\n    ListWrapper.push(this._log, ['reportSample', completeSample, validSample]);\n    return assert.returnType((PromiseWrapper.resolve(null)), Promise);\n  }\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/benchpress/test/sampler_spec.map\n\n//# sourceMappingURL=./sampler_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}