{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/core/compiler/pipeline/element_binder_builder.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/pipeline/element_binder_builder.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {int,\n  isPresent,\n  isBlank,\n  Type,\n  BaseException,\n  StringWrapper,\n  RegExpWrapper,\n  isString,\n  stringify} from 'angular2/src/facade/lang';\nimport {Element,\n  DOM} from 'angular2/src/facade/dom';\nimport {ListWrapper,\n  List,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {Parser,\n  ProtoChangeDetector} from 'angular2/change_detection';\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nvar DOT_REGEXP = RegExpWrapper.create('\\\\.');\nconst ARIA_PREFIX = 'aria-';\nvar ariaSettersCache = StringMapWrapper.create();\nfunction ariaSetterFactory(attrName) {\n  assert.argumentTypes(attrName, assert.type.string);\n  var setterFn = StringMapWrapper.get(ariaSettersCache, attrName);\n  if (isBlank(setterFn)) {\n    setterFn = function(element, value) {\n      assert.argumentTypes(element, Element, value, assert.type.any);\n      if (isPresent(value)) {\n        DOM.setAttribute(element, attrName, stringify(value));\n      } else {\n        DOM.removeAttribute(element, attrName);\n      }\n    };\n    StringMapWrapper.set(ariaSettersCache, attrName, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(ariaSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nconst CLASS_PREFIX = 'class.';\nvar classSettersCache = StringMapWrapper.create();\nfunction classSetterFactory(className) {\n  assert.argumentTypes(className, assert.type.string);\n  var setterFn = StringMapWrapper.get(classSettersCache, className);\n  if (isBlank(setterFn)) {\n    setterFn = function(element, value) {\n      assert.argumentTypes(element, Element, value, assert.type.any);\n      if (value) {\n        DOM.addClass(element, className);\n      } else {\n        DOM.removeClass(element, className);\n      }\n    };\n    StringMapWrapper.set(classSettersCache, className, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(classSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nconst STYLE_PREFIX = 'style.';\nvar styleSettersCache = StringMapWrapper.create();\nfunction styleSetterFactory(styleName, stylesuffix) {\n  assert.argumentTypes(styleName, assert.type.string, stylesuffix, assert.type.string);\n  var cacheKey = styleName + stylesuffix;\n  var setterFn = StringMapWrapper.get(styleSettersCache, cacheKey);\n  if (isBlank(setterFn)) {\n    setterFn = function(element, value) {\n      assert.argumentTypes(element, Element, value, assert.type.any);\n      var valAsStr;\n      if (isPresent(value)) {\n        valAsStr = stringify(value);\n        DOM.setStyle(element, styleName, valAsStr + stylesuffix);\n      } else {\n        DOM.removeStyle(element, styleName);\n      }\n    };\n    StringMapWrapper.set(classSettersCache, cacheKey, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(styleSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nconst ROLE_ATTR = 'role';\nfunction roleSetter(element, value) {\n  assert.argumentTypes(element, Element, value, assert.type.any);\n  if (isString(value)) {\n    DOM.setAttribute(element, ROLE_ATTR, value);\n  } else {\n    DOM.removeAttribute(element, ROLE_ATTR);\n    if (isPresent(value)) {\n      throw new BaseException(\"Invalid role attribute, only string values are allowed, got '\" + stringify(value) + \"'\");\n    }\n  }\n}\nObject.defineProperty(roleSetter, \"parameters\", {get: function() {\n    return [[Element], []];\n  }});\nexport class ElementBinderBuilder extends CompileStep {\n  constructor(parser, compilationUnit) {\n    assert.argumentTypes(parser, Parser, compilationUnit, assert.type.any);\n    super();\n    this._parser = parser;\n    this._compilationUnit = compilationUnit;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    var elementBinder = null;\n    if (current.hasBindings) {\n      var protoView = current.inheritedProtoView;\n      var protoInjectorWasBuilt = isBlank(parent) ? true : current.inheritedProtoElementInjector !== parent.inheritedProtoElementInjector;\n      var currentProtoElementInjector = protoInjectorWasBuilt ? current.inheritedProtoElementInjector : null;\n      elementBinder = protoView.bindElement(currentProtoElementInjector, current.componentDirective, current.viewportDirective);\n      if (isPresent(current.textNodeBindings)) {\n        this._bindTextNodes(protoView, current);\n      }\n      if (isPresent(current.propertyBindings)) {\n        this._bindElementProperties(protoView, current);\n      }\n      if (isPresent(current.eventBindings)) {\n        this._bindEvents(protoView, current);\n      }\n      this._bindDirectiveProperties(current.getAllDirectives(), current);\n    } else if (isPresent(parent)) {\n      elementBinder = parent.inheritedElementBinder;\n    }\n    current.inheritedElementBinder = elementBinder;\n  }\n  _bindTextNodes(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.textNodeBindings, (expression, indexInParent) => {\n      protoView.bindTextNode(indexInParent, expression);\n    });\n  }\n  _bindElementProperties(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.propertyBindings, (expression, property) => {\n      var setterFn,\n          styleParts,\n          styleSuffix;\n      if (StringWrapper.startsWith(property, ARIA_PREFIX)) {\n        setterFn = ariaSetterFactory(property);\n      } else if (StringWrapper.equals(property, ROLE_ATTR)) {\n        setterFn = roleSetter;\n      } else if (StringWrapper.startsWith(property, CLASS_PREFIX)) {\n        setterFn = classSetterFactory(StringWrapper.substring(property, CLASS_PREFIX.length));\n      } else if (StringWrapper.startsWith(property, STYLE_PREFIX)) {\n        styleParts = StringWrapper.split(property, DOT_REGEXP);\n        styleSuffix = styleParts.length > 2 ? ListWrapper.get(styleParts, 2) : '';\n        setterFn = styleSetterFactory(ListWrapper.get(styleParts, 1), styleSuffix);\n      } else if (DOM.hasProperty(compileElement.element, property)) {\n        setterFn = reflector.setter(property);\n      }\n      if (isPresent(setterFn)) {\n        protoView.bindElementProperty(expression.ast, property, setterFn);\n      }\n    });\n  }\n  _bindEvents(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.eventBindings, (expression, eventName) => {\n      protoView.bindEvent(eventName, expression);\n    });\n  }\n  _bindDirectiveProperties(directives, compileElement) {\n    assert.argumentTypes(directives, assert.genericType(List, DirectiveMetadata), compileElement, CompileElement);\n    var protoView = compileElement.inheritedProtoView;\n    for (var directiveIndex = 0; directiveIndex < directives.length; directiveIndex++) {\n      var directive = ListWrapper.get(directives, directiveIndex);\n      var annotation = directive.annotation;\n      if (isBlank(annotation.bind))\n        continue;\n      var _this = this;\n      StringMapWrapper.forEach(annotation.bind, function(dirProp, elProp) {\n        var expression = isPresent(compileElement.propertyBindings) ? MapWrapper.get(compileElement.propertyBindings, elProp) : null;\n        if (isBlank(expression)) {\n          var attributeValue = MapWrapper.get(compileElement.attrs(), elProp);\n          if (isPresent(attributeValue)) {\n            expression = _this._parser.wrapLiteralPrimitive(attributeValue, _this._compilationUnit);\n          } else {\n            throw new BaseException(\"No element binding found for property '\" + elProp + \"' which is required by directive '\" + stringify(directive.type) + \"'\");\n          }\n        }\n        var len = dirProp.length;\n        var dirBindingName = dirProp;\n        var isContentWatch = dirProp[len - 2] === '[' && dirProp[len - 1] === ']';\n        if (isContentWatch)\n          dirBindingName = dirProp.substring(0, len - 2);\n        protoView.bindDirectiveProperty(directiveIndex, expression, dirBindingName, reflector.setter(dirBindingName), isContentWatch);\n      });\n    }\n  }\n}\nObject.defineProperty(ElementBinderBuilder, \"parameters\", {get: function() {\n    return [[Parser], [assert.type.any]];\n  }});\nObject.defineProperty(ElementBinderBuilder.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nObject.defineProperty(ElementBinderBuilder.prototype._bindDirectiveProperties, \"parameters\", {get: function() {\n    return [[assert.genericType(List, DirectiveMetadata)], [CompileElement]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/pipeline/element_binder_builder.map\n\n//# sourceMappingURL=./element_binder_builder.map","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}