{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","angular2/src/core/compiler/pipeline/text_interpolation_parser.js","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/pipeline/text_interpolation_parser.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {RegExpWrapper,\n  StringWrapper,\n  isPresent} from 'angular2/src/facade/lang';\nimport {Node,\n  DOM} from 'angular2/src/facade/dom';\nimport {Parser} from 'angular2/change_detection';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nexport class TextInterpolationParser extends CompileStep {\n  constructor(parser, compilationUnit) {\n    assert.argumentTypes(parser, Parser, compilationUnit, assert.type.any);\n    super();\n    this._parser = parser;\n    this._compilationUnit = compilationUnit;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    if (!current.compileChildren || current.ignoreBindings) {\n      return ;\n    }\n    var element = current.element;\n    var childNodes = DOM.templateAwareRoot(element).childNodes;\n    for (var i = 0; i < childNodes.length; i++) {\n      var node = childNodes[i];\n      if (node.nodeType === Node.TEXT_NODE) {\n        this._parseTextNode(current, node, i);\n      }\n    }\n  }\n  _parseTextNode(pipelineElement, node, nodeIndex) {\n    var ast = this._parser.parseInterpolation(node.nodeValue, this._compilationUnit);\n    if (isPresent(ast)) {\n      DOM.setText(node, ' ');\n      pipelineElement.addTextNodeBinding(nodeIndex, ast);\n    }\n  }\n}\nObject.defineProperty(TextInterpolationParser, \"parameters\", {get: function() {\n    return [[Parser], [assert.type.any]];\n  }});\nObject.defineProperty(TextInterpolationParser.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/pipeline/text_interpolation_parser.map\n\n//# sourceMappingURL=./text_interpolation_parser.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}