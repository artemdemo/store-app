{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","angular2/src/core/compiler/selector.js","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/selector.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {assert} from \"rtts_assert/rtts_assert\";\nimport {List,\n  Map,\n  ListWrapper,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent,\n  isBlank,\n  RegExpWrapper,\n  RegExpMatcherWrapper,\n  StringWrapper} from 'angular2/src/facade/lang';\nconst _EMPTY_ATTR_VALUE = '';\nvar _SELECTOR_REGEXP = RegExpWrapper.create('^([-\\\\w]+)|' + '(?:\\\\.([-\\\\w]+))|' + '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])');\nexport class CssSelector {\n  static parse(selector) {\n    assert.argumentTypes(selector, assert.type.string);\n    var cssSelector = new CssSelector();\n    var matcher = RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);\n    var match;\n    while (isPresent(match = RegExpMatcherWrapper.next(matcher))) {\n      if (isPresent(match[1])) {\n        cssSelector.setElement(match[1]);\n      }\n      if (isPresent(match[2])) {\n        cssSelector.addClassName(match[2]);\n      }\n      if (isPresent(match[3])) {\n        cssSelector.addAttribute(match[3], match[4]);\n      }\n    }\n    return assert.returnType((cssSelector), CssSelector);\n  }\n  constructor() {\n    this.element = null;\n    this.classNames = ListWrapper.create();\n    this.attrs = ListWrapper.create();\n  }\n  setElement(element = null) {\n    assert.argumentTypes(element, assert.type.string);\n    if (isPresent(element)) {\n      element = element.toLowerCase();\n    }\n    this.element = element;\n  }\n  addAttribute(name, value = _EMPTY_ATTR_VALUE) {\n    assert.argumentTypes(name, assert.type.string, value, assert.type.string);\n    ListWrapper.push(this.attrs, name.toLowerCase());\n    if (isPresent(value)) {\n      value = value.toLowerCase();\n    } else {\n      value = _EMPTY_ATTR_VALUE;\n    }\n    ListWrapper.push(this.attrs, value);\n  }\n  addClassName(name) {\n    assert.argumentTypes(name, assert.type.string);\n    ListWrapper.push(this.classNames, name.toLowerCase());\n  }\n  toString() {\n    var res = '';\n    if (isPresent(this.element)) {\n      res += this.element;\n    }\n    if (isPresent(this.classNames)) {\n      for (var i = 0; i < this.classNames.length; i++) {\n        res += '.' + this.classNames[i];\n      }\n    }\n    if (isPresent(this.attrs)) {\n      for (var i = 0; i < this.attrs.length; ) {\n        var attrName = this.attrs[i++];\n        var attrValue = this.attrs[i++];\n        res += '[' + attrName;\n        if (attrValue.length > 0) {\n          res += '=' + attrValue;\n        }\n        res += ']';\n      }\n    }\n    return assert.returnType((res), assert.type.string);\n  }\n}\nObject.defineProperty(CssSelector.parse, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(CssSelector.prototype.setElement, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(CssSelector.prototype.addAttribute, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(CssSelector.prototype.addClassName, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nexport class SelectorMatcher {\n  constructor() {\n    this._elementMap = MapWrapper.create();\n    this._elementPartialMap = MapWrapper.create();\n    this._classMap = MapWrapper.create();\n    this._classPartialMap = MapWrapper.create();\n    this._attrValueMap = MapWrapper.create();\n    this._attrValuePartialMap = MapWrapper.create();\n  }\n  addSelectable(cssSelector, selectable) {\n    assert.argumentTypes(cssSelector, CssSelector, selectable, assert.type.any);\n    var matcher = this;\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n    if (isPresent(element)) {\n      var isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n    if (isPresent(classNames)) {\n      for (var index = 0; index < classNames.length; index++) {\n        var isTerminal = attrs.length === 0 && index === classNames.length - 1;\n        var className = classNames[index];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n    if (isPresent(attrs)) {\n      for (var index = 0; index < attrs.length; ) {\n        var isTerminal = index === attrs.length - 2;\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n        var map = isTerminal ? matcher._attrValueMap : matcher._attrValuePartialMap;\n        var valuesMap = MapWrapper.get(map, attrName);\n        if (isBlank(valuesMap)) {\n          valuesMap = MapWrapper.create();\n          MapWrapper.set(map, attrName, valuesMap);\n        }\n        if (isTerminal) {\n          this._addTerminal(valuesMap, attrValue, selectable);\n        } else {\n          matcher = this._addPartial(valuesMap, attrValue);\n        }\n      }\n    }\n  }\n  _addTerminal(map, name, selectable) {\n    assert.argumentTypes(map, assert.genericType(Map, assert.type.string, assert.type.string), name, assert.type.string, selectable, assert.type.any);\n    var terminalList = MapWrapper.get(map, name);\n    if (isBlank(terminalList)) {\n      terminalList = ListWrapper.create();\n      MapWrapper.set(map, name, terminalList);\n    }\n    ListWrapper.push(terminalList, selectable);\n  }\n  _addPartial(map, name) {\n    assert.argumentTypes(map, assert.genericType(Map, assert.type.string, assert.type.string), name, assert.type.string);\n    var matcher = MapWrapper.get(map, name);\n    if (isBlank(matcher)) {\n      matcher = new SelectorMatcher();\n      MapWrapper.set(map, name, matcher);\n    }\n    return matcher;\n  }\n  match(cssSelector, matchedCallback) {\n    assert.argumentTypes(cssSelector, CssSelector, matchedCallback, Function);\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n    this._matchTerminal(this._elementMap, element, matchedCallback);\n    this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback);\n    if (isPresent(classNames)) {\n      for (var index = 0; index < classNames.length; index++) {\n        var className = classNames[index];\n        this._matchTerminal(this._classMap, className, matchedCallback);\n        this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback);\n      }\n    }\n    if (isPresent(attrs)) {\n      for (var index = 0; index < attrs.length; ) {\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n        var valuesMap = MapWrapper.get(this._attrValueMap, attrName);\n        if (!StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\n          this._matchTerminal(valuesMap, _EMPTY_ATTR_VALUE, matchedCallback);\n        }\n        this._matchTerminal(valuesMap, attrValue, matchedCallback);\n        valuesMap = MapWrapper.get(this._attrValuePartialMap, attrName);\n        this._matchPartial(valuesMap, attrValue, cssSelector, matchedCallback);\n      }\n    }\n  }\n  _matchTerminal(map = null, name, matchedCallback) {\n    assert.argumentTypes(map, assert.genericType(Map, assert.type.string, assert.type.string), name, assert.type.any, matchedCallback, assert.type.any);\n    if (isBlank(map) || isBlank(name)) {\n      return ;\n    }\n    var selectables = MapWrapper.get(map, name);\n    if (isBlank(selectables)) {\n      return ;\n    }\n    for (var index = 0; index < selectables.length; index++) {\n      matchedCallback(selectables[index]);\n    }\n  }\n  _matchPartial(map = null, name, cssSelector, matchedCallback) {\n    assert.argumentTypes(map, assert.genericType(Map, assert.type.string, assert.type.string), name, assert.type.any, cssSelector, assert.type.any, matchedCallback, assert.type.any);\n    if (isBlank(map) || isBlank(name)) {\n      return ;\n    }\n    var nestedSelector = MapWrapper.get(map, name);\n    if (isBlank(nestedSelector)) {\n      return ;\n    }\n    nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\nObject.defineProperty(SelectorMatcher.prototype.addSelectable, \"parameters\", {get: function() {\n    return [[CssSelector], []];\n  }});\nObject.defineProperty(SelectorMatcher.prototype._addTerminal, \"parameters\", {get: function() {\n    return [[assert.genericType(Map, assert.type.string, assert.type.string)], [assert.type.string], []];\n  }});\nObject.defineProperty(SelectorMatcher.prototype._addPartial, \"parameters\", {get: function() {\n    return [[assert.genericType(Map, assert.type.string, assert.type.string)], [assert.type.string]];\n  }});\nObject.defineProperty(SelectorMatcher.prototype.match, \"parameters\", {get: function() {\n    return [[CssSelector], [Function]];\n  }});\nObject.defineProperty(SelectorMatcher.prototype._matchTerminal, \"parameters\", {get: function() {\n    return [[assert.genericType(Map, assert.type.string, assert.type.string)], [], []];\n  }});\nObject.defineProperty(SelectorMatcher.prototype._matchPartial, \"parameters\", {get: function() {\n    return [[assert.genericType(Map, assert.type.string, assert.type.string)], [], [], []];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/compiler/selector.map\n\n//# sourceMappingURL=./selector.map","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}