{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","angular2/src/core/events/hammer_gestures.js","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11"],"names":[],"mappings":"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","file":"angular2/src/core/events/hammer_gestures.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {HammerGesturesPluginCommon} from './hammer_common';\nimport {Element} from 'angular2/src/facade/dom';\nimport {isPresent,\n  BaseException} from 'angular2/src/facade/lang';\nexport class HammerGesturesPlugin extends HammerGesturesPluginCommon {\n  constructor() {\n    super();\n  }\n  supports(eventName) {\n    assert.argumentTypes(eventName, assert.type.string);\n    if (!super.supports(eventName))\n      return assert.returnType((false), assert.type.boolean);\n    if (!isPresent(window.Hammer)) {\n      throw new BaseException(`Hammer.js is not loaded, can not bind ${eventName} event`);\n    }\n    return assert.returnType((true), assert.type.boolean);\n  }\n  addEventListener(element, eventName, handler) {\n    assert.argumentTypes(element, Element, eventName, assert.type.string, handler, Function);\n    var zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    zone.runOutsideAngular(function() {\n      var mc = new Hammer(element);\n      mc.get('pinch').set({enable: true});\n      mc.get('rotate').set({enable: true});\n      mc.on(eventName, function(eventObj) {\n        zone.run(function() {\n          handler(eventObj);\n        });\n      });\n    });\n  }\n}\nObject.defineProperty(HammerGesturesPlugin.prototype.supports, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(HammerGesturesPlugin.prototype.addEventListener, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string], [Function]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/events/hammer_gestures.map\n\n//# sourceMappingURL=./hammer_gestures.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","$__placeholder__0.call($__placeholder__1)","$traceurRuntime.superGet($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}