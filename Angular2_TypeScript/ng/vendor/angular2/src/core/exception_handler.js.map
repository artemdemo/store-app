{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/exception_handler.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,gEAAoB,UAAS,SAAQ;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,YAAoB,KAAG,MAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,yBAAoB,KAAG,mBAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;uBGFY,CAAA,SAAQ,AAAC,sBCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,mBCGP,SAAM,iBAAe,KDHsB,ACSlD,CDTmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,oBCG5C,IAAG,CAAH,UAAK,KAAI,AAAkC,CAAG;cAAlC,WAAS,6CAAI,KAAG;cAAG,OAAK,6CAAI,KAAG;AACzC,AAAI,cAAA,CAAA,cAAa,EAAI,CAAA,kBAAiB,AAAC,CAAC,UAAS,CAAC,CAAA,CAAI,CAAA,WAAU,KAAK,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAA,CAAI,WAAS,CAAC;AACvG,AAAI,cAAA,CAAA,SAAQ,EAAI,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,GAAI,IAAI,EAAC,OAAK,GAAM,GAAC,CAAC;AACtD,gBAAI,AAAC,EAAC,EAAE,EAAC,MAAI,EAAI,UAAQ,EAAC,kBAAiB,EAAC,eAAa,EAAG,CAAC;UAC/D,MDN8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;IHEvC;EAC3B,CAAA;ADDI,CAAC,CAAC;AMYiC","file":"angular2/src/core/exception_handler.js","sourceRoot":"C:/Sources/git/angular20/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isPresent,\n  print} from 'angular2/src/facade/lang';\nimport {ListWrapper,\n  isListLikeIterable} from 'angular2/src/facade/collection';\nexport class ExceptionHandler {\n  call(error, stackTrace = null, reason = null) {\n    var longStackTrace = isListLikeIterable(stackTrace) ? ListWrapper.join(stackTrace, \"\\n\\n\") : stackTrace;\n    var reasonStr = isPresent(reason) ? `\\n${reason}` : '';\n    print(`${error}${reasonStr}\\nSTACKTRACE:\\n${longStackTrace}`);\n  }\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/core/exception_handler.map\n\n//# sourceMappingURL=./exception_handler.map"]}