{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","angular2/src/mock/xhr_mock.js","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"angular2/src/mock/xhr_mock.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {assert} from \"rtts_assert/rtts_assert\";\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {List,\n  ListWrapper,\n  Map,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {isBlank,\n  isPresent,\n  normalizeBlank,\n  BaseException} from 'angular2/src/facade/lang';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nexport class XHRMock extends XHR {\n  constructor() {\n    super();\n    this._expectations = [];\n    this._definitions = MapWrapper.create();\n    this._requests = [];\n  }\n  get(url) {\n    assert.argumentTypes(url, assert.type.string);\n    var request = new _PendingRequest(url);\n    ListWrapper.push(this._requests, request);\n    return assert.returnType((request.getPromise()), assert.genericType(Promise, assert.type.string));\n  }\n  expect(url, response) {\n    assert.argumentTypes(url, assert.type.string, response, assert.type.string);\n    var expectation = new _Expectation(url, response);\n    ListWrapper.push(this._expectations, expectation);\n  }\n  when(url, response) {\n    assert.argumentTypes(url, assert.type.string, response, assert.type.string);\n    MapWrapper.set(this._definitions, url, response);\n  }\n  flush() {\n    if (this._requests.length === 0) {\n      throw new BaseException('No pending requests to flush');\n    }\n    do {\n      var request = ListWrapper.removeAt(this._requests, 0);\n      this._processRequest(request);\n    } while (this._requests.length > 0);\n    this.verifyNoOustandingExpectations();\n  }\n  verifyNoOustandingExpectations() {\n    if (this._expectations.length === 0)\n      return ;\n    var urls = [];\n    for (var i = 0; i < this._expectations.length; i++) {\n      var expectation = this._expectations[i];\n      ListWrapper.push(urls, expectation.url);\n    }\n    throw new BaseException(`Unsatisfied requests: ${ListWrapper.join(urls, ', ')}`);\n  }\n  _processRequest(request) {\n    assert.argumentTypes(request, _PendingRequest);\n    var url = request.url;\n    if (this._expectations.length > 0) {\n      var expectation = this._expectations[0];\n      if (expectation.url === url) {\n        ListWrapper.remove(this._expectations, expectation);\n        request.complete(expectation.response);\n        return ;\n      }\n    }\n    if (MapWrapper.contains(this._definitions, url)) {\n      var response = MapWrapper.get(this._definitions, url);\n      request.complete(normalizeBlank(response));\n      return ;\n    }\n    throw new BaseException(`Unexpected request ${url}`);\n  }\n}\nObject.defineProperty(XHRMock.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(XHRMock.prototype.expect, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(XHRMock.prototype.when, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(XHRMock.prototype._processRequest, \"parameters\", {get: function() {\n    return [[_PendingRequest]];\n  }});\nclass _PendingRequest {\n  constructor(url) {\n    this.url = url;\n    this.completer = PromiseWrapper.completer();\n  }\n  complete(response) {\n    assert.argumentTypes(response, assert.type.string);\n    if (isBlank(response)) {\n      this.completer.reject(`Failed to load ${this.url}`);\n    } else {\n      this.completer.complete(response);\n    }\n  }\n  getPromise() {\n    return assert.returnType((this.completer.promise), assert.genericType(Promise, assert.type.string));\n  }\n}\nObject.defineProperty(_PendingRequest.prototype.complete, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nclass _Expectation {\n  constructor(url, response) {\n    assert.argumentTypes(url, assert.type.string, response, assert.type.string);\n    this.url = url;\n    this.response = response;\n  }\n}\nObject.defineProperty(_Expectation, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/src/mock/xhr_mock.map\n\n//# sourceMappingURL=./xhr_mock.map","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}