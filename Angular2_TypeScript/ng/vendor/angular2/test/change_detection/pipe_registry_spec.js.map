{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/change_detection/pipe_registry_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"angular2/test/change_detection/pipe_registry_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach} from 'angular2/test_lib';\nimport {PipeRegistry} from 'angular2/src/change_detection/pipes/pipe_registry';\nimport {Pipe} from 'angular2/src/change_detection/pipes/pipe';\nexport function main() {\n  describe(\"pipe registry\", () => {\n    var firstPipe = new Pipe();\n    var secondPipe = new Pipe();\n    it(\"should return the first pipe supporting the data type\", () => {\n      var r = new PipeRegistry({\"type\": [new PipeFactory(false, firstPipe), new PipeFactory(true, secondPipe)]});\n      expect(r.get(\"type\", \"some object\")).toBe(secondPipe);\n    });\n    it(\"should throw when no matching type\", () => {\n      var r = new PipeRegistry({});\n      expect(() => r.get(\"unknown\", \"some object\")).toThrowError(`Cannot find a pipe for type 'unknown' object 'some object'`);\n    });\n    it(\"should throw when no matching pipe\", () => {\n      var r = new PipeRegistry({\"type\": []});\n      expect(() => r.get(\"type\", \"some object\")).toThrowError(`Cannot find a pipe for type 'type' object 'some object'`);\n    });\n  });\n}\nclass PipeFactory {\n  constructor(shouldSupport, pipe) {\n    this.shouldSupport = shouldSupport;\n    this.pipe = pipe;\n  }\n  supports(obj) {\n    return this.shouldSupport;\n  }\n  create() {\n    return this.pipe;\n  }\n}\nObject.defineProperty(PipeFactory, \"parameters\", {get: function() {\n    return [[assert.type.boolean], [assert.type.any]];\n  }});\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/change_detection/pipe_registry_spec.map\n\n//# sourceMappingURL=./pipe_registry_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}