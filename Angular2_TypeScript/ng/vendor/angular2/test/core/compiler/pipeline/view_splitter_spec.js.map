{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/pipeline/view_splitter_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/pipeline/view_splitter_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe,\n  beforeEach,\n  it,\n  expect,\n  iit,\n  ddescribe,\n  el} from 'angular2/test_lib';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {ViewSplitter} from 'angular2/src/core/compiler/pipeline/view_splitter';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {DOM,\n  TemplateElement} from 'angular2/src/facade/dom';\nimport {Lexer,\n  Parser} from 'angular2/change_detection';\nexport function main() {\n  describe('ViewSplitter', () => {\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()), null)]);\n    }\n    it('should mark root elements as viewRoot', () => {\n      var rootElement = el('<div></div>');\n      var results = createPipeline().process(rootElement);\n      expect(results[0].isViewRoot).toBe(true);\n    });\n    describe('<template> elements', () => {\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should not wrap a root <template> element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n    });\n    describe('elements with template attribute', () => {\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div template>x</div>');\n        var originalChild = rootElement.content.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toEqual(4);\n      });\n    });\n    describe('elements with !directive_name attribute', () => {\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span !if></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template if=\"\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span !if=\"\"></span>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div !foo=\"bar\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div !foo>x</div>');\n        var originalChild = rootElement.content.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template foo=\"\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div !prop=\"expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div !foreach=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div !varname></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div !foo></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toEqual(4);\n      });\n      it('should not allow multiple template directives on the same element', () => {\n        expect(() => {\n          var rootElement = el('<div><div !foo !bar=\"blah\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: foo and bar cannot be used simultaneously!');\n      });\n      it('should not allow template and bang directives on the same element', () => {\n        expect(() => {\n          var rootElement = el('<div><div !foo template=\"blah\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: blah and foo cannot be used simultaneously!');\n      });\n    });\n  });\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/core/compiler/pipeline/view_splitter_spec.map\n\n//# sourceMappingURL=./view_splitter_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}