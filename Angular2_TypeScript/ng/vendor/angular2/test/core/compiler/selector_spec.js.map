{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/selector_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/selector_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe,\n  it,\n  expect,\n  beforeEach,\n  ddescribe,\n  iit,\n  xit,\n  el} from 'angular2/test_lib';\nimport {SelectorMatcher} from 'angular2/src/core/compiler/selector';\nimport {CssSelector} from 'angular2/src/core/compiler/selector';\nimport {List,\n  ListWrapper,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/facade/dom';\nexport function main() {\n  describe('SelectorMatcher', () => {\n    var matcher,\n        matched,\n        selectableCollector;\n    function reset() {\n      matched = ListWrapper.create();\n    }\n    beforeEach(() => {\n      reset();\n      selectableCollector = (selectable) => {\n        ListWrapper.push(matched, selectable);\n      };\n      matcher = new SelectorMatcher();\n    });\n    it('should select by element name case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('someTag'), 1);\n      matcher.match(CssSelector.parse('SOMEOTHERTAG'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('SOMETAG'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n    it('should select by class name case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('.someClass'), 1);\n      matcher.addSelectable(CssSelector.parse('.someClass.class2'), 2);\n      matcher.match(CssSelector.parse('.SOMEOTHERCLASS'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('.SOMECLASS'), selectableCollector);\n      expect(matched).toEqual([1]);\n      reset();\n      matcher.match(CssSelector.parse('.someClass.class2'), selectableCollector);\n      expect(matched).toEqual([1, 2]);\n    });\n    it('should select by attr name case insensitive independent of the value', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr]'), 1);\n      matcher.addSelectable(CssSelector.parse('[someAttr][someAttr2]'), 2);\n      matcher.match(CssSelector.parse('[SOMEOTHERATTR]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('[SOMEATTR]'), selectableCollector);\n      expect(matched).toEqual([1]);\n      reset();\n      matcher.match(CssSelector.parse('[SOMEATTR=someValue]'), selectableCollector);\n      expect(matched).toEqual([1]);\n      reset();\n      matcher.match(CssSelector.parse('[someAttr][someAttr2]'), selectableCollector);\n      expect(matched).toEqual([1, 2]);\n    });\n    it('should select by attr name only once if the value is from the DOM', () => {\n      matcher.addSelectable(CssSelector.parse('[some-decor]'), 1);\n      var elementSelector = new CssSelector();\n      var element = el('<div attr></div>');\n      var empty = element.getAttribute('attr');\n      elementSelector.addAttribute('some-decor', empty);\n      matcher.match(elementSelector, selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n    it('should select by attr name and value case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr=someValue]'), 1);\n      matcher.match(CssSelector.parse('[SOMEATTR=SOMEOTHERATTR]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('[SOMEATTR=SOMEVALUE]'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n    it('should select by element name, class name and attribute name with value', () => {\n      matcher.addSelectable(CssSelector.parse('someTag.someClass[someAttr=someValue]'), 1);\n      matcher.match(CssSelector.parse('someOtherTag.someOtherClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('someTag.someOtherClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('someTag.someClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('someTag.someClass[someAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n      matcher.match(CssSelector.parse('someTag.someClass[someAttr=someValue]'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n    it('should select independent of the order in the css selector', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr].someClass'), 1);\n      matcher.addSelectable(CssSelector.parse('.someClass[someAttr]'), 2);\n      matcher.addSelectable(CssSelector.parse('.class1.class2'), 3);\n      matcher.addSelectable(CssSelector.parse('.class2.class1'), 4);\n      matcher.match(CssSelector.parse('[someAttr].someClass'), selectableCollector);\n      expect(matched).toEqual([1, 2]);\n      reset();\n      matcher.match(CssSelector.parse('.someClass[someAttr]'), selectableCollector);\n      expect(matched).toEqual([1, 2]);\n      reset();\n      matcher.match(CssSelector.parse('.class1.class2'), selectableCollector);\n      expect(matched).toEqual([3, 4]);\n      reset();\n      matcher.match(CssSelector.parse('.class2.class1'), selectableCollector);\n      expect(matched).toEqual([4, 3]);\n    });\n  });\n  describe('CssSelector.parse', () => {\n    it('should detect element names', () => {\n      var cssSelector = CssSelector.parse('sometag');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.toString()).toEqual('sometag');\n    });\n    it('should detect class names', () => {\n      var cssSelector = CssSelector.parse('.someClass');\n      expect(cssSelector.classNames).toEqual(['someclass']);\n      expect(cssSelector.toString()).toEqual('.someclass');\n    });\n    it('should detect attr names', () => {\n      var cssSelector = CssSelector.parse('[attrname]');\n      expect(cssSelector.attrs).toEqual(['attrname', '']);\n      expect(cssSelector.toString()).toEqual('[attrname]');\n    });\n    it('should detect attr values', () => {\n      var cssSelector = CssSelector.parse('[attrname=attrvalue]');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.toString()).toEqual('[attrname=attrvalue]');\n    });\n    it('should detect multiple parts', () => {\n      var cssSelector = CssSelector.parse('sometag[attrname=attrvalue].someclass');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.classNames).toEqual(['someclass']);\n      expect(cssSelector.toString()).toEqual('sometag.someclass[attrname=attrvalue]');\n    });\n  });\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/core/compiler/selector_spec.map\n\n//# sourceMappingURL=./selector_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}