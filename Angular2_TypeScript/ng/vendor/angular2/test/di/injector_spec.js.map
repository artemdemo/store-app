{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/di/injector_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"angular2/test/di/injector_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  ddescribe,\n  it,\n  iit,\n  expect,\n  beforeEach} from 'angular2/test_lib';\nimport {Injector,\n  Inject,\n  InjectLazy,\n  bind} from 'angular2/di';\nclass Engine {}\nclass BrokenEngine {\n  constructor() {\n    throw \"Broken Engine\";\n  }\n}\nclass DashboardSoftware {}\nclass Dashboard {\n  constructor(software) {\n    assert.argumentTypes(software, DashboardSoftware);\n  }\n}\nObject.defineProperty(Dashboard, \"parameters\", {get: function() {\n    return [[DashboardSoftware]];\n  }});\nclass TurboEngine extends Engine {}\nclass Car {\n  constructor(engine) {\n    assert.argumentTypes(engine, Engine);\n    this.engine = engine;\n  }\n}\nObject.defineProperty(Car, \"parameters\", {get: function() {\n    return [[Engine]];\n  }});\nclass CarWithLazyEngine {\n  constructor(engineFactory) {\n    this.engineFactory = engineFactory;\n  }\n}\nObject.defineProperty(CarWithLazyEngine, \"parameters\", {get: function() {\n    return [[new InjectLazy(Engine)]];\n  }});\nclass CarWithDashboard {\n  constructor(engine, dashboard) {\n    assert.argumentTypes(engine, Engine, dashboard, Dashboard);\n    this.engine = engine;\n    this.dashboard = dashboard;\n  }\n}\nObject.defineProperty(CarWithDashboard, \"parameters\", {get: function() {\n    return [[Engine], [Dashboard]];\n  }});\nclass SportsCar extends Car {\n  constructor(engine) {\n    assert.argumentTypes(engine, Engine);\n    super(engine);\n  }\n}\nObject.defineProperty(SportsCar, \"parameters\", {get: function() {\n    return [[Engine]];\n  }});\nclass CarWithInject {\n  constructor(engine) {\n    assert.argumentTypes(engine, Engine);\n    this.engine = engine;\n  }\n}\nObject.defineProperty(CarWithInject, \"parameters\", {get: function() {\n    return [[Engine, new Inject(TurboEngine)]];\n  }});\nclass CyclicEngine {\n  constructor(car) {\n    assert.argumentTypes(car, Car);\n  }\n}\nObject.defineProperty(CyclicEngine, \"parameters\", {get: function() {\n    return [[Car]];\n  }});\nclass NoAnnotations {\n  constructor(secretDependency) {}\n}\nexport function main() {\n  describe('injector', function() {\n    it('should instantiate a class without dependencies', function() {\n      var injector = new Injector([Engine]);\n      var engine = injector.get(Engine);\n      expect(engine).toBeAnInstanceOf(Engine);\n    });\n    it('should resolve dependencies based on type information', function() {\n      var injector = new Injector([Engine, Car]);\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(Car);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n    it('should resolve dependencies based on @Inject annotation', function() {\n      var injector = new Injector([TurboEngine, Engine, CarWithInject]);\n      var car = injector.get(CarWithInject);\n      expect(car).toBeAnInstanceOf(CarWithInject);\n      expect(car.engine).toBeAnInstanceOf(TurboEngine);\n    });\n    it('should throw when no type and not @Inject', function() {\n      expect(() => new Injector([NoAnnotations])).toThrowError('Cannot resolve all parameters for NoAnnotations');\n    });\n    it('should cache instances', function() {\n      var injector = new Injector([Engine]);\n      var e1 = injector.get(Engine);\n      var e2 = injector.get(Engine);\n      expect(e1).toBe(e2);\n    });\n    it('should bind to a value', function() {\n      var injector = new Injector([bind(Engine).toValue(\"fake engine\")]);\n      var engine = injector.get(Engine);\n      expect(engine).toEqual(\"fake engine\");\n    });\n    it('should bind to a factory', function() {\n      function sportsCarFactory(e) {\n        assert.argumentTypes(e, Engine);\n        return new SportsCar(e);\n      }\n      Object.defineProperty(sportsCarFactory, \"parameters\", {get: function() {\n          return [[Engine]];\n        }});\n      var injector = new Injector([Engine, bind(Car).toFactory(sportsCarFactory)]);\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(SportsCar);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n    it('should support overriding factory dependencies', function() {\n      var injector = new Injector([Engine, bind(Car).toFactory((e) => new SportsCar(e), [Engine])]);\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(SportsCar);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n    it(\"should flatten passed-in bindings\", function() {\n      var injector = new Injector([[[Engine, Car]]]);\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(Car);\n    });\n    it(\"should use the last binding \" + \"when there are mutliple bindings for same token\", function() {\n      var injector = new Injector([bind(Engine).toClass(Engine), bind(Engine).toClass(TurboEngine)]);\n      expect(injector.get(Engine)).toBeAnInstanceOf(TurboEngine);\n    });\n    it('should use non-type tokens', function() {\n      var injector = new Injector([bind('token').toValue('value')]);\n      expect(injector.get('token')).toEqual('value');\n    });\n    it('should throw when given invalid bindings', function() {\n      expect(() => new Injector([\"blah\"])).toThrowError('Invalid binding blah');\n      expect(() => new Injector([bind(\"blah\")])).toThrowError('Invalid binding blah');\n    });\n    it('should provide itself', function() {\n      var parent = new Injector([]);\n      var child = parent.createChild([]);\n      expect(child.get(Injector)).toBe(child);\n    });\n    it('should throw when no provider defined', function() {\n      var injector = new Injector([]);\n      expect(() => injector.get('NonExisting')).toThrowError('No provider for NonExisting!');\n    });\n    it('should show the full path when no provider', function() {\n      var injector = new Injector([CarWithDashboard, Engine, Dashboard]);\n      expect(() => injector.get(CarWithDashboard)).toThrowError('No provider for DashboardSoftware! (CarWithDashboard -> Dashboard -> DashboardSoftware)');\n    });\n    it('should throw when trying to instantiate a cyclic dependency', function() {\n      var injector = new Injector([Car, bind(Engine).toClass(CyclicEngine)]);\n      expect(() => injector.get(Car)).toThrowError('Cannot instantiate cyclic dependency! (Car -> Engine -> Car)');\n      expect(() => injector.asyncGet(Car)).toThrowError('Cannot instantiate cyclic dependency! (Car -> Engine -> Car)');\n    });\n    it('should show the full path when error happens in a constructor', function() {\n      var injector = new Injector([Car, bind(Engine).toClass(BrokenEngine)]);\n      try {\n        injector.get(Car);\n        throw \"Must throw\";\n      } catch (e) {\n        expect(e.message).toContain(\"Error during instantiation of Engine! (Car -> Engine)\");\n      }\n    });\n    it('should instantiate an object after a failed attempt', function() {\n      var isBroken = true;\n      var injector = new Injector([Car, bind(Engine).toFactory(() => isBroken ? new BrokenEngine() : new Engine())]);\n      expect(() => injector.get(Car)).toThrowError(new RegExp(\"Error\"));\n      isBroken = false;\n      expect(injector.get(Car)).toBeAnInstanceOf(Car);\n    });\n    describe(\"default bindings\", function() {\n      it(\"should be used when no matching binding found\", function() {\n        var injector = new Injector([], {defaultBindings: true});\n        var car = injector.get(Car);\n        expect(car).toBeAnInstanceOf(Car);\n      });\n      it(\"should use the matching binding when it is available\", function() {\n        var injector = new Injector([bind(Car).toClass(SportsCar)], {defaultBindings: true});\n        var car = injector.get(Car);\n        expect(car).toBeAnInstanceOf(SportsCar);\n      });\n    });\n    describe(\"child\", function() {\n      it('should load instances from parent injector', function() {\n        var parent = new Injector([Engine]);\n        var child = parent.createChild([]);\n        var engineFromParent = parent.get(Engine);\n        var engineFromChild = child.get(Engine);\n        expect(engineFromChild).toBe(engineFromParent);\n      });\n      it(\"should not use the child bindings when resolving the dependencies of a parent binding\", function() {\n        var parent = new Injector([Car, Engine]);\n        var child = parent.createChild([bind(Engine).toClass(TurboEngine)]);\n        var carFromChild = child.get(Car);\n        expect(carFromChild.engine).toBeAnInstanceOf(Engine);\n      });\n      it('should create new instance in a child injector', function() {\n        var parent = new Injector([Engine]);\n        var child = parent.createChild([bind(Engine).toClass(TurboEngine)]);\n        var engineFromParent = parent.get(Engine);\n        var engineFromChild = child.get(Engine);\n        expect(engineFromParent).not.toBe(engineFromChild);\n        expect(engineFromChild).toBeAnInstanceOf(TurboEngine);\n      });\n      it(\"should create child injectors without default bindings\", function() {\n        var parent = new Injector([], {defaultBindings: true});\n        var child = parent.createChild([]);\n        var childCar = child.get(Car);\n        var parentCar = parent.get(Car);\n        expect(childCar).toBe(parentCar);\n      });\n    });\n    describe(\"lazy\", function() {\n      it(\"should create dependencies lazily\", function() {\n        var injector = new Injector([Engine, CarWithLazyEngine]);\n        var car = injector.get(CarWithLazyEngine);\n        expect(car.engineFactory()).toBeAnInstanceOf(Engine);\n      });\n      it(\"should cache instance created lazily\", function() {\n        var injector = new Injector([Engine, CarWithLazyEngine]);\n        var car = injector.get(CarWithLazyEngine);\n        var e1 = car.engineFactory();\n        var e2 = car.engineFactory();\n        expect(e1).toBe(e2);\n      });\n    });\n  });\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/di/injector_spec.map\n\n//# sourceMappingURL=./injector_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}