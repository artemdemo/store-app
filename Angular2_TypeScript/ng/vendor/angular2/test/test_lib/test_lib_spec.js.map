{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/test_lib/test_lib_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11"],"names":[],"mappings":"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","file":"angular2/test/test_lib/test_lib_spec.js","sourceRoot":"C:/Sources/git/angular20/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  it,\n  iit,\n  ddescribe,\n  expect,\n  tick,\n  async,\n  SpyObject,\n  beforeEach,\n  proxy} from 'angular2/test_lib';\nimport {MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {IMPLEMENTS,\n  Date,\n  DateWrapper} from 'angular2/src/facade/lang';\nclass TestObj {\n  constructor(prop) {\n    this.prop = prop;\n  }\n}\nclass SpyTestObj extends SpyObject {\n  noSuchMethod(m) {\n    return super.noSuchMethod(m);\n  }\n}\nObject.defineProperty(SpyTestObj, \"annotations\", {get: function() {\n    return [new proxy, new IMPLEMENTS(TestObj)];\n  }});\nexport function main() {\n  describe('test_lib', () => {\n    describe('equality', () => {\n      it('should structurally compare objects', () => {\n        var expected = new TestObj(new TestObj({'one': [1, 2]}));\n        var actual = new TestObj(new TestObj({'one': [1, 2]}));\n        var falseActual = new TestObj(new TestObj({'one': [1, 3]}));\n        expect(actual).toEqual(expected);\n        expect(falseActual).not.toEqual(expected);\n      });\n      it('should structurally compare objects with private and static fields', () => {\n        expect(DateWrapper.fromMillis(1)).toEqual(DateWrapper.fromMillis(1));\n      });\n      it('should work for arrays of string maps', () => {\n        expect([{'a': 'b'}]).toEqual([{'a': 'b'}]);\n      });\n      it('should work for arrays of real maps', () => {\n        expect([MapWrapper.createFromStringMap({'a': 'b'})]).toEqual([MapWrapper.createFromStringMap({'a': 'b'})]);\n        expect([MapWrapper.createFromStringMap({'a': 'b'})]).not.toEqual([MapWrapper.createFromStringMap({'a': 'c'})]);\n      });\n    });\n    describe('toEqual for Maps', () => {\n      it('should detect equality for same reference', () => {\n        var m1 = MapWrapper.createFromStringMap({'a': 1});\n        expect(m1).toEqual(m1);\n      });\n      it('should detect equality for same content', () => {\n        expect(MapWrapper.createFromStringMap({'a': 1})).toEqual(MapWrapper.createFromStringMap({'a': 1}));\n      });\n      it('should detect missing entries', () => {\n        expect(MapWrapper.createFromStringMap({'a': 1})).not.toEqual(MapWrapper.createFromStringMap({}));\n      });\n      it('should detect different values', () => {\n        expect(MapWrapper.createFromStringMap({'a': 1})).not.toEqual(MapWrapper.createFromStringMap({'a': 2}));\n      });\n      it('should detect additional entries', () => {\n        expect(MapWrapper.createFromStringMap({'a': 1})).not.toEqual(MapWrapper.createFromStringMap({\n          'a': 1,\n          'b': 1\n        }));\n      });\n    });\n    describe(\"spy objects\", () => {\n      var spyObj;\n      beforeEach(() => {\n        spyObj = new SpyTestObj();\n      });\n      it(\"should pass the runtime check\", () => {\n        var t = assert.type(spyObj, TestObj);\n        expect(t).toBeDefined();\n      });\n      it(\"should return a new spy func with no calls\", () => {\n        expect(spyObj.spy(\"someFunc\")).not.toHaveBeenCalled();\n      });\n      it(\"should record function calls\", () => {\n        spyObj.spy(\"someFunc\").andCallFake((a, b) => a + b);\n        expect(spyObj.someFunc(1, 2)).toEqual(3);\n        expect(spyObj.spy(\"someFunc\")).toHaveBeenCalledWith(1, 2);\n      });\n    });\n  });\n}\n\n//# sourceMappingURL=C:/Sources/git/angular20/modules/angular2/test/test_lib/test_lib_spec.map\n\n//# sourceMappingURL=./test_lib_spec.map","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","$__placeholder__0.call($__placeholder__1)","$traceurRuntime.superGet($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}