[
    {
        "keys": [ "ctrl+t", "ctrl+d" ],
        "command": "typescript_go_to_definition",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "f12" ],
        "command": "typescript_go_to_definition",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+f" ],
        "command": "typescript_format_selection",
        "context": [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
            { "key": "num_selections", "operator": "equal", "operand": 1, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+f" ],
        "command": "typescript_format_document",
        "context": [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "num_selections", "operator": "equal", "operand": 1, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+m" ],
        "command": "typescript_rename",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+n" ],
        "command": "typescript_next_ref",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+n" ],
        "command": "typescript_next_ref",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "text.find-refs" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+p" ],
        "command": "typescript_prev_ref",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+p" ],
        "command": "typescript_prev_ref",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "text.find-refs" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+q" ],
        "command": "typescript_quick_info_doc",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+r" ],
        "command": "typescript_find_references",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+s" ],
        "command": "typescript_save",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+t", "ctrl+t" ],
        "command": "typescript_go_to_type",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    // In case when auto match is enabled, only format if not within {}
    {
        "keys": [ "}" ],
        "command": "typescript_format_on_key",
        "args": { "key": "}" },
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\{$" },
            { "key": "following_text", "operator": "not_regex_contains", "operand": "^\\}" }
        ]
    },
    // In case when auto match is disabled, format the block regardless
    {
        "keys": [ "}" ],
        "command": "typescript_format_on_key",
        "args": { "key": "}" },
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": false }
        ]
    },
    {
        "keys": [ ";" ],
        "command": "typescript_format_on_key",
        "args": { "key": ";" },
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "enter" ],
        "command": "typescript_format_on_key",
        "args": { "key": "\n" },
        "context": [
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "following_text", "operator": "not_regex_match", "operand": "^\\}" },
            { "key": "selector", "operator": "not_equal", "operand": "meta.scope.between-tag-pair" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "num_selections", "operator": "equal", "operand": 1},
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "enter" ],
        "command": "typescript_go_to_ref",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "text.find-refs" }
        ]
    },
    {
        "keys": [ "enter" ],
        "command": "commit_completion",
        "context": [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
        ]
    },
    {
        "keys": [ "ctrl+;" ],
        "command": "typescript_format_line",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+shift+]" ],
        "command": "typescript_format_brackets",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "super+v" ],
        "command": "typescript_paste_and_format",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    },
    {
        "keys": [ "ctrl+v" ],
        "command": "typescript_paste_and_format",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "source.ts" }
        ]
    }
]
